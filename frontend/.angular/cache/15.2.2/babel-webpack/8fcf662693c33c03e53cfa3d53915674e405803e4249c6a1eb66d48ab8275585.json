{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./_services/storage.service\";\nimport * as i2 from \"./_services/auth.service\";\nimport * as i3 from \"./_shared/event-bus.service\";\nexport class AppComponent {\n  constructor(storageService, authService, eventBusService) {\n    this.storageService = storageService;\n    this.authService = authService;\n    this.eventBusService = eventBusService;\n    this.roles = [];\n    this.isLoggedIn = false;\n    this.showAdminBoard = false;\n    this.showModeratorBoard = false;\n    this.isSideNavCollapsed = false;\n    this.screenWidth = 0;\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.storageService.isLoggedIn();\n    if (this.isLoggedIn) {\n      const user = this.storageService.getUser();\n      this.roles = user.roles;\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n      this.username = user.username;\n    }\n    this.eventBusSub = this.eventBusService.on('logout', () => {\n      this.logout();\n    });\n    console.log(this.username);\n  }\n  logout() {\n    this.authService.logout().subscribe({\n      next: res => {\n        console.log(res);\n        this.storageService.clean();\n        window.location.reload();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  onToggleSideNav(data) {\n    this.screenWidth = data.screenWidth;\n    this.isSideNavCollapsed = data.collapsed;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.EventBusService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"isLoggedIn\", \"username\", \"onToggleSideNav\"], [3, \"collapsed\", \"screenWidth\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-sidebar\", 0);\n      i0.ɵɵlistener(\"onToggleSideNav\", function AppComponent_Template_app_sidebar_onToggleSideNav_0_listener($event) {\n        return ctx.onToggleSideNav($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(1, \"app-body\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"isLoggedIn\", ctx.isLoggedIn)(\"username\", ctx.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"collapsed\", ctx.isSideNavCollapsed)(\"screenWidth\", ctx.screenWidth);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAgBA,OAAM,MAAOA,YAAY;EASvBC,YACUC,cAA8B,EAC9BC,WAAwB,EACxBC,eAAgC;IAFhC,mBAAc,GAAdF,cAAc;IACd,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;IAXjB,UAAK,GAAa,EAAE;IAC5B,eAAU,GAAG,KAAK;IAClB,mBAAc,GAAG,KAAK;IACtB,uBAAkB,GAAG,KAAK;IA2C1B,uBAAkB,GAAG,KAAK;IAC1B,gBAAW,GAAG,CAAC;EAnCZ;EACHC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,cAAc,CAACI,UAAU,EAAE;IAElD,IAAI,IAAI,CAACA,UAAU,EAAE;MACnB,MAAMC,IAAI,GAAG,IAAI,CAACL,cAAc,CAACM,OAAO,EAAE;MAC1C,IAAI,CAACC,KAAK,GAAGF,IAAI,CAACE,KAAK;MAEvB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACD,KAAK,CAACE,QAAQ,CAAC,YAAY,CAAC;MACvD,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACH,KAAK,CAACE,QAAQ,CAAC,gBAAgB,CAAC;MAE/D,IAAI,CAACE,QAAQ,GAAGN,IAAI,CAACM,QAAQ;;IAG/B,IAAI,CAACC,WAAW,GAAG,IAAI,CAACV,eAAe,CAACW,EAAE,CAAC,QAAQ,EAAE,MAAK;MACxD,IAAI,CAACC,MAAM,EAAE;IACf,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,QAAQ,CAAC;EAC5B;EAEAG,MAAM;IACJ,IAAI,CAACb,WAAW,CAACa,MAAM,EAAE,CAACG,SAAS,CAAC;MAClCC,IAAI,EAAGC,GAAG,IAAI;QACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;QAChB,IAAI,CAACnB,cAAc,CAACoB,KAAK,EAAE;QAE3BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAKAC,eAAe,CAACC,IAAmB;IACjC,IAAI,CAACC,WAAW,GAAGD,IAAI,CAACC,WAAW;IACnC,IAAI,CAACC,kBAAkB,GAAGF,IAAI,CAACG,SAAS;EAC1C;;AArDWhC,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChBzBC,sCAAyG;MAA5FA;QAAA,OAAmBC,2BAAuB;MAAA,EAAC;MAAiDD,iBAAc;MAEvHA,8BAAkF;;;MAFzBA,2CAAyB;MAExEA,eAAgC;MAAhCA,kDAAgC","names":["AppComponent","constructor","storageService","authService","eventBusService","ngOnInit","isLoggedIn","user","getUser","roles","showAdminBoard","includes","showModeratorBoard","username","eventBusSub","on","logout","console","log","subscribe","next","res","clean","window","location","reload","error","err","onToggleSideNav","data","screenWidth","isSideNavCollapsed","collapsed","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/app.component.ts","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './_services/auth.service';\nimport { StorageService } from './_services/storage.service';\nimport { EventBusService } from './_shared/event-bus.service';\n\ninterface SideNavToggle {\n  screenWidth: number;\n  collapsed: boolean;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username?: string;\n\n  eventBusSub?: Subscription;\n\n  constructor(\n    private storageService: StorageService,\n    private authService: AuthService,\n    private eventBusService: EventBusService\n  ) {}\n  ngOnInit(): void {\n    this.isLoggedIn = this.storageService.isLoggedIn();\n\n    if (this.isLoggedIn) {\n      const user = this.storageService.getUser();\n      this.roles = user.roles;\n\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n    }\n\n    this.eventBusSub = this.eventBusService.on('logout', () => {\n      this.logout();\n    });\n    console.log(this.username);\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe({\n      next: (res) => {\n        console.log(res);\n        this.storageService.clean();\n\n        window.location.reload();\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  isSideNavCollapsed = false;\n  screenWidth = 0;\n\n  onToggleSideNav(data: SideNavToggle): void {\n    this.screenWidth = data.screenWidth;\n    this.isSideNavCollapsed = data.collapsed;\n  }\n}\n","<app-sidebar (onToggleSideNav)=\"onToggleSideNav($event)\" [isLoggedIn]=\"isLoggedIn\" [username]=\"username\"></app-sidebar>\n\n<app-body [collapsed]=\"isSideNavCollapsed\" [screenWidth]=\"screenWidth\"></app-body>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}