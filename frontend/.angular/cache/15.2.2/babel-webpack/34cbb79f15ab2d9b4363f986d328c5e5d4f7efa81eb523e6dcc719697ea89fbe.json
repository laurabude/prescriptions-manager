{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AviationWeatherService {\n  constructor(http) {\n    this.http = http;\n  }\n  getMETARData(airport) {\n    const url = `http://localhost:8080/api/aviation-weather/cgi-bin/data/metar.php?ids=${airport}&format=decoded`;\n    return this.http.get(url, {\n      responseType: 'text'\n    });\n  }\n  getTAFData(airport) {\n    const url = `http://localhost:8080/api/aviation-weather/cgi-bin/data/taf.php?ids=${airport}&format=decoded`;\n    return this.http.get(url, {\n      responseType: 'text'\n    });\n  }\n}\nAviationWeatherService.ɵfac = function AviationWeatherService_Factory(t) {\n  return new (t || AviationWeatherService)(i0.ɵɵinject(i1.HttpClient));\n};\nAviationWeatherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AviationWeatherService,\n  factory: AviationWeatherService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,sBAAsB;EACjCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,YAAY,CAACC,OAAe;IAC1B,MAAMC,GAAG,GAAG,yEAAyED,OAAO,iBAAiB;IAE7G,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAACD,GAAG,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACrD;EAEAC,UAAU,CAACJ,OAAe;IACxB,MAAMC,GAAG,GAAG,uEAAuED,OAAO,iBAAiB;IAE3G,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAACD,GAAG,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACrD;;AAbWP,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAS,SAAtBT,sBAAsB;EAAAU,YAFrB;AAAM","names":["AviationWeatherService","constructor","http","getMETARData","airport","url","get","responseType","getTAFData","factory","providedIn"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/_services/aviation-weather.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AviationWeatherService {\n  constructor(private http: HttpClient) {}\n\n  getMETARData(airport: string) {\n    const url = `http://localhost:8080/api/aviation-weather/cgi-bin/data/metar.php?ids=${airport}&format=decoded`;\n\n    return this.http.get(url, { responseType: 'text' });\n  }\n\n  getTAFData(airport: string) {\n    const url = `http://localhost:8080/api/aviation-weather/cgi-bin/data/taf.php?ids=${airport}&format=decoded`;\n\n    return this.http.get(url, { responseType: 'text' });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}