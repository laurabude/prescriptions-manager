{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/doctor.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nfunction DoctorInterfaceComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", patient_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r2, \" \");\n  }\n}\nfunction DoctorInterfaceComponent_tr_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const prescription_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prescription_r3.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prescription_r3.medication);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prescription_r3.dosage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prescription_r3.time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prescription_r3.days);\n  }\n}\nconst _c0 = function () {\n  return [1, 2, 3, 4, 5, 6, 7];\n};\nconst _c1 = function () {\n  return [2, 4, 6];\n};\nconst _c2 = function () {\n  return [3, 6];\n};\nexport class DoctorInterfaceComponent {\n  constructor(doctorService) {\n    this.doctorService = doctorService;\n    this.selectedPatient = ''; // Define selectedPatient property\n    this.medication = ''; // Define medication property\n    this.dosage = ''; // Define dosage property\n    this.time = '';\n    this.viewDate = new Date();\n    this.events = [];\n    this.selectedDates = [];\n    this.patients = [];\n    this.dayModifiers = [];\n    this.prescriptions = [];\n  }\n  ngOnInit() {\n    this.getPatients();\n    this.getPrescriptions();\n  }\n  getPatients() {\n    this.doctorService.getPatients().subscribe(data => {\n      this.patients = data;\n      console.log(this.patients);\n    }, error => {\n      console.error('Error fetching patients:', error);\n    });\n  }\n  getPrescriptions() {\n    this.doctorService.getPrescriptions().subscribe(data => {\n      this.prescriptions = data;\n      console.log(this.prescriptions);\n    }, error => {\n      console.error('Error fetching prescriptions:', error);\n    });\n  }\n  setPrescription() {\n    var form = {\n      username: this.selectedPatient,\n      medication: this.medication,\n      dosage: this.dosage,\n      time: this.time,\n      days: this.days\n    };\n    this.doctorService.setPrescription(form).subscribe(data => {\n      console.log(data);\n    });\n  }\n  onDayClicked(day) {\n    const clickedDate = day.day.date;\n    // Toggle the selection status of the date\n    if (this.isSelectedDate(clickedDate)) {\n      this.selectedDates = this.selectedDates.filter(date => date.toDateString() !== clickedDate.toDateString());\n    } else {\n      this.selectedDates.push(clickedDate);\n    }\n  }\n  isSelectedDate(date) {\n    return this.selectedDates.some(selectedDate => selectedDate.toDateString() === date.toDateString());\n  }\n}\nDoctorInterfaceComponent.ɵfac = function DoctorInterfaceComponent_Factory(t) {\n  return new (t || DoctorInterfaceComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n};\nDoctorInterfaceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DoctorInterfaceComponent,\n  selectors: [[\"app-doctor-interface\"]],\n  decls: 52,\n  vars: 13,\n  consts: [[1, \"containe\"], [1, \"doctor-interface-container\"], [\"appearance\", \"fill\", 1, \"select-field\"], [\"for\", \"patientSelect\"], [\"id\", \"patientSelect\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-container\"], [\"appearance\", \"fill\"], [\"for\", \"medication\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"medication\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dosage\"], [\"matInput\", \"\", \"type\", \"text\", \"id\", \"dosage\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"time\"], [\"type\", \"time\", \"id\", \"time\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"days\"], [\"id\", \"days\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [\"mat-raised-button\", \"\", 3, \"click\"], [1, \"prescription-table-container\"], [1, \"prescription-table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function DoctorInterfaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Prescribe:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Select Patient:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_mat_select_ngModelChange_7_listener($event) {\n        return ctx.selectedPatient = $event;\n      });\n      i0.ɵɵtemplate(8, DoctorInterfaceComponent_mat_option_8_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"mat-form-field\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Medication:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.medication = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 6)(15, \"mat-form-field\", 7)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Dosage:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.dosage = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Time to take medication:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.time = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 6)(24, \"mat-form-field\", 7)(25, \"label\", 14);\n      i0.ɵɵtext(26, \"Take every:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-select\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_mat_select_ngModelChange_27_listener($event) {\n        return ctx.days = $event;\n      });\n      i0.ɵɵelementStart(28, \"mat-option\", 16);\n      i0.ɵɵtext(29, \"day\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-option\", 16);\n      i0.ɵɵtext(31, \"other day\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"mat-option\", 16);\n      i0.ɵɵtext(33, \"3 days\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(34, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function DoctorInterfaceComponent_Template_button_click_34_listener() {\n        return ctx.setPrescription();\n      });\n      i0.ɵɵtext(35, \"Set Prescription\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 18)(37, \"table\", 19)(38, \"thead\")(39, \"tr\")(40, \"th\");\n      i0.ɵɵtext(41, \"Patient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"th\");\n      i0.ɵɵtext(43, \"Medication\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"th\");\n      i0.ɵɵtext(45, \"Dosage\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"th\");\n      i0.ɵɵtext(47, \"Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"th\");\n      i0.ɵɵtext(49, \"Days\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(50, \"tbody\");\n      i0.ɵɵtemplate(51, DoctorInterfaceComponent_tr_51_Template, 11, 5, \"tr\", 20);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.medication);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.dosage);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.time);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.days);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(10, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(11, _c1));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(12, _c2));\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.prescriptions);\n    }\n  },\n  dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i4.MatFormField, i5.MatInput, i6.MatButton, i7.MatSelect, i8.MatOption],\n  styles: [\".selected-date[_ngcontent-%COMP%] {\\n    background-color: #66BB6A;\\n    color: #FFFFFF;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n}\\n\\n.btn-set-prescription[_ngcontent-%COMP%] {\\n    background-color: #4caf50;\\n    color: white;\\n    padding: 10px 15px;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n}\\n\\n.btn-set-prescription[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n}\\n\\n\\n\\n\\n.doctor-interface-container[_ngcontent-%COMP%] {\\n    padding: 20px;\\n    border-radius: 10px;\\n    background-color: #ffffff;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n}\\n\\n.select-field[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n.input-container[_ngcontent-%COMP%] {\\n    margin-bottom: 16px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    margin-top: 16px;\\n}\\n\\n.input-container[_ngcontent-%COMP%] {\\n    margin-bottom: 16px;\\n}\\n\\n.input-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 8px;\\n}\\n\\n.input-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .input-container[_ngcontent-%COMP%]   input[type=\\\"time\\\"][_ngcontent-%COMP%] {\\n    padding: 8px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    width: 100%;\\n    box-sizing: border-box;\\n}\\n\\n.prescription-table-container[_ngcontent-%COMP%] {\\n    float: right;\\n    margin-top: 20px;\\n    margin-right: 20px;\\n}\\n\\n.prescription-table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin-top: 16px;\\n}\\n\\n.prescription-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .prescription-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    border: 1px solid #ddd;\\n    padding: 8px;\\n    text-align: left;\\n}\\n\\n.prescription-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #4caf50;\\n    color: white;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9yLWludGVyZmFjZS9kb2N0b3ItaW50ZXJmYWNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7O0FBR0EsbUNBQW1DOztBQUVuQztJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLHVDQUF1QztBQUMzQzs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7O0FBRUE7O0lBRUksWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtJQUN6QixnQkFBZ0I7QUFDcEI7O0FBRUE7O0lBRUksc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7QUFDbEMiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0ZWQtZGF0ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY2QkI2QTtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuLmZvcm0tZ3JvdXAge1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbi5idG4tc2V0LXByZXNjcmlwdGlvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYnRuLXNldC1wcmVzY3JpcHRpb246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XG59XG5cblxuLyogZG9jdG9yLWludGVyZmFjZS5jb21wb25lbnQuY3NzICovXG5cbi5kb2N0b3ItaW50ZXJmYWNlLWNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4uc2VsZWN0LWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLmlucHV0LWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cblxuYnV0dG9uIHtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xufVxuXG4uaW5wdXQtY29udGFpbmVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xufVxuXG4uaW5wdXQtY29udGFpbmVyIGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG59XG5cbi5pbnB1dC1jb250YWluZXIgaW5wdXQsXG4uaW5wdXQtY29udGFpbmVyIGlucHV0W3R5cGU9XCJ0aW1lXCJdIHtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnByZXNjcmlwdGlvbi10YWJsZS1jb250YWluZXIge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMjBweDtcbn1cblxuLnByZXNjcmlwdGlvbi10YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xufVxuXG4ucHJlc2NyaXB0aW9uLXRhYmxlIHRoLFxuLnByZXNjcmlwdGlvbi10YWJsZSB0ZCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnByZXNjcmlwdGlvbi10YWJsZSB0aCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcbiAgICBjb2xvcjogd2hpdGU7XG59XG5cbi5jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DoctorInterfaceComponent","constructor","doctorService","Date","ngOnInit","getPatients","getPrescriptions","subscribe","data","patients","console","log","error","prescriptions","setPrescription","form","username","selectedPatient","medication","dosage","time","days","onDayClicked","day","clickedDate","date","isSelectedDate","selectedDates","filter","toDateString","push","some","selectedDate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-interface/doctor-interface.component.html","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-interface/doctor-interface.component.ts"],"sourcesContent":["<div class=\"containe\">\n    <div class=\"doctor-interface-container\">\n        <h2>Prescribe:</h2>\n\n        <mat-form-field appearance=\"fill\" class=\"select-field\">\n            <label for=\"patientSelect\">Select Patient:</label>\n            <mat-select id=\"patientSelect\" [(ngModel)]=\"selectedPatient\">\n                <mat-option *ngFor=\"let patient of patients\" [value]=\"patient\">\n                    {{ patient }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <div class=\"input-container\">\n            <mat-form-field appearance=\"fill\">\n                <label for=\"medication\">Medication:</label>\n                <input matInput type=\"text\" id=\"medication\" [(ngModel)]=\"medication\" />\n            </mat-form-field>\n        </div>\n        <div class=\"input-container\">\n            <mat-form-field appearance=\"fill\">\n                <label for=\"dosage\">Dosage:</label>\n                <input matInput type=\"text\" id=\"dosage\" [(ngModel)]=\"dosage\" />\n            </mat-form-field>\n        </div>\n\n        <div class=\"input-container\">\n            <label for=\"time\">Time to take medication:</label>\n            <input type=\"time\" id=\"time\" [(ngModel)]=\"time\" />\n        </div>\n\n\n        <div class=\"input-container\">\n            <mat-form-field appearance=\"fill\">\n                <label for=\"days\">Take every:</label>\n                <mat-select id=\"days\" [(ngModel)]=\"days\">\n                    <mat-option [value]=\"[1, 2, 3, 4, 5, 6, 7]\">day</mat-option>\n                    <mat-option [value]=\"[2, 4, 6]\">other day</mat-option>\n                    <mat-option [value]=\"[3, 6]\">3 days</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <button mat-raised-button (click)=\"setPrescription()\">Set Prescription</button>\n\n        <div class=\"prescription-table-container\">\n            <table class=\"prescription-table\">\n                <thead>\n                    <tr>\n                        <th>Patient</th>\n                        <th>Medication</th>\n                        <th>Dosage</th>\n                        <th>Time</th>\n                        <th>Days</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let prescription of prescriptions\">\n                        <td>{{ prescription.username }}</td>\n                        <td>{{ prescription.medication }}</td>\n                        <td>{{ prescription.dosage }}</td>\n                        <td>{{ prescription.time }}</td>\n                        <td>{{ prescription.days }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { CalendarEvent, MonthViewDay } from 'calendar-utils';\nimport { DoctorService } from '../_services/doctor.service';\n\n@Component({\n  selector: 'app-doctor-interface',\n  templateUrl: './doctor-interface.component.html',\n  styleUrls: ['./doctor-interface.component.css']\n})\nexport class DoctorInterfaceComponent implements OnInit {\n  selectedPatient: string = ''; // Define selectedPatient property\n  medication: string = ''; // Define medication property\n  dosage: string = ''; // Define dosage property\n  time:string='';\n  days:number;\n  viewDate: Date = new Date();\n  events: CalendarEvent[] = [];\n  selectedDates: Date[] = [];\n  patients: any[] = [];\n  dayModifiers: any[] = [];\n  prescriptions: any[] = [];\n\n  constructor(private doctorService: DoctorService) { }\n\n  ngOnInit(): void {\n    this.getPatients();\n    this.getPrescriptions();\n  }\n\n  getPatients() {\n    this.doctorService.getPatients().subscribe(\n      (data: any) => {\n        this.patients = data;\n        console.log(this.patients);\n      },\n      (error) => {\n        console.error('Error fetching patients:', error);\n      }\n    );\n  }\n  getPrescriptions() {\n    this.doctorService.getPrescriptions().subscribe(\n        (data: any) => {\n            this.prescriptions = data;\n            console.log(this.prescriptions);\n        },\n        (error) => {\n            console.error('Error fetching prescriptions:', error);\n        }\n    );\n}\n\n  setPrescription() {\n    var form = {\n      username : this.selectedPatient,\n      medication: this.medication,\n      dosage: this.dosage,\n      time: this.time,\n      days: this.days\n    }\n    this.doctorService.setPrescription(form).subscribe(\n      (data:any) => {\n        console.log(data);\n      }\n    )\n  }\n  onDayClicked(day: { day: MonthViewDay<any>; sourceEvent: MouseEvent | KeyboardEvent }): void {\n    const clickedDate = day.day.date;\n\n    // Toggle the selection status of the date\n    if (this.isSelectedDate(clickedDate)) {\n      this.selectedDates = this.selectedDates.filter(date => date.toDateString() !== clickedDate.toDateString());\n    } else {\n      this.selectedDates.push(clickedDate);\n    }\n  }\n  \n  isSelectedDate(date: Date): boolean {\n    return this.selectedDates.some(selectedDate => selectedDate.toDateString() === date.toDateString());\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}