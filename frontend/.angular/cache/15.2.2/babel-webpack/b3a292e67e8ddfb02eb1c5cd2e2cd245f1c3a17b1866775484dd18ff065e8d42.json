{"ast":null,"code":"import _asyncToGenerator from \"/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"show\": a0\n  };\n};\nconst OPENSKY_API_URL = 'https://opensky-network.org/api/states/all'; //\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibGF1cmFnaCIsImEiOiJjbGk4cThscnMxdjY0M2VtbDc3Yjdsa25wIn0.S3BdCi6irPxokf4rJcGBMQ';\nexport class MapComponent {\n  constructor() {\n    this.searchCallsign = '';\n    this.showOnlyInAir = false;\n    this.airplanes = [];\n    this.filteredAirplanes = [];\n    this.callsignMap = {};\n    this.airportData = []; // Array to store the parsed airport data\n    this.showAirports = false;\n    this.hideAirplanes = false;\n    this.filterDropdownOpen = false;\n  }\n  ngOnInit() {\n    mapboxgl.accessToken = MAPBOX_ACCESS_TOKEN;\n    this.initializeMap();\n    this.parseCSVData().then(data => {\n      this.airportData = data;\n      this.addMarkers(this.map);\n    });\n    this.fetchFlightData();\n  }\n  toggleFilterDropdown() {\n    this.filterDropdownOpen = !this.filterDropdownOpen;\n  }\n  toggleHideAirplanes() {\n    this.hideAirplanes = !this.hideAirplanes;\n    const layerVisibility = this.hideAirplanes ? 'none' : 'visible';\n    this.map.setLayoutProperty('airplane-layer', 'visibility', layerVisibility);\n  }\n  parseCSVData() {\n    const csvUrl = 'assets/filtered_airports.csv'; // Path to your airport data file\n    return new Promise((resolve, reject) => {\n      axios.get(csvUrl).then(response => {\n        const csvData = response.data;\n        const parsedData = Papa.parse(csvData, {\n          header: true\n        }).data;\n        resolve(parsedData);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n  addMarkers(map) {\n    const airportMarkers = [];\n    this.airportData.forEach(airport => {\n      const latitude = parseFloat(airport.latitude_deg);\n      const longitude = parseFloat(airport.longitude_deg);\n      if (!isNaN(latitude) && !isNaN(longitude)) {\n        const markerElement = document.createElement('img');\n        markerElement.className = 'airport-marker';\n        markerElement.src = 'assets/airport.png';\n        markerElement.width = 20;\n        markerElement.height = 20;\n        const popupContent = `\n          <div>\n            <strong>Name:</strong> ${airport.name}<br>\n            <strong>Country:</strong> ${airport.iso_country}<br>\n            <strong>Continent:</strong> ${airport.continent}\n          </div>\n        `;\n        const marker = new mapboxgl.Marker(markerElement).setLngLat([longitude, latitude]).setPopup(new mapboxgl.Popup({\n          closeButton: false\n        }).setHTML(popupContent));\n        // Change cursor to pointer on marker hover\n        marker.getElement().style.cursor = 'pointer';\n        airportMarkers.push(marker);\n      }\n    });\n    // Toggle visibility of airport markers\n    const toggleButton = document.getElementById('toggle-airports');\n    toggleButton?.addEventListener('click', () => {\n      if (this.showAirports) {\n        airportMarkers.forEach(marker => {\n          marker.remove();\n        });\n      } else {\n        airportMarkers.forEach(marker => {\n          marker.addTo(map);\n        });\n      }\n      this.showAirports = !this.showAirports;\n    });\n  }\n  initializeMap() {\n    this.map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: [0.45, 51.47],\n      zoom: 4\n    });\n    this.map.on('load', () => {\n      this.map.addControl(new mapboxgl.NavigationControl());\n      this.map.loadImage('/assets/airplane.png', (error, image) => {\n        if (error) {\n          console.error('Error loading the airplane icon image:', error);\n        } else {\n          this.map.addImage('airplane-icon', image);\n        }\n      });\n      this.map.on('click', 'airplane-layer', event => {\n        const coordinates = event.features[0].geometry.coordinates.slice();\n        const {\n          callSign,\n          altitude,\n          speed\n        } = event.features[0].properties;\n        // Ensure that the popup is not already open\n        if (this.popup && this.popup.isOpen()) {\n          this.popup.remove();\n        }\n        const altitudeInMeters = (altitude * 0.3048).toFixed(2);\n        this.popup = new mapboxgl.Popup({\n          closeButton: false\n        }).setLngLat(coordinates).setHTML(`<div>\n              <strong>Call Sign:</strong> ${callSign}<br>\n              <strong>Altitude:</strong> ${altitudeInMeters} m<br>\n              <strong>Speed:</strong> ${speed} knots\n            </div>`).addTo(this.map);\n      });\n      // Change the cursor style when hovering over an airplane marker\n      this.map.on('mouseenter', 'airplane-layer', () => {\n        this.map.getCanvas().style.cursor = 'pointer';\n      });\n      // Change the cursor style back to default when not hovering over an airplane marker\n      this.map.on('mouseleave', 'airplane-layer', () => {\n        this.map.getCanvas().style.cursor = '';\n      });\n    });\n  }\n  fetchFlightData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield axios.get(OPENSKY_API_URL);\n        const flightData = response.data.states;\n        _this.airplanes = flightData.map(flightArr => {\n          return {\n            type: 'Feature',\n            geometry: {\n              type: 'Point',\n              coordinates: [flightArr[5], flightArr[6]]\n            },\n            properties: {\n              callSign: flightArr[1] || '',\n              altitude: flightArr[7] || 0,\n              speed: flightArr[9] || 0,\n              heading: flightArr[10] || 0\n            }\n          };\n        });\n        _this.filterAirplanes();\n        const airplaneSource = _this.map.getSource('airplanes');\n        if (airplaneSource) {\n          airplaneSource.setData({\n            type: 'FeatureCollection',\n            features: _this.filteredAirplanes\n          });\n        } else {\n          _this.map.addSource('airplanes', {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: _this.filteredAirplanes\n            }\n          });\n          _this.map.addLayer({\n            id: 'airplane-layer',\n            type: 'symbol',\n            source: 'airplanes',\n            layout: {\n              'icon-image': 'airplane-icon',\n              'icon-size': {\n                base: 1,\n                stops: [[0, 0.001], [8, 0.04], [16, 0.2]]\n              },\n              'icon-allow-overlap': true,\n              'icon-rotate': ['get', 'heading'],\n              'visibility': _this.hideAirplanes ? 'none' : 'visible'\n            },\n            paint: {}\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching flight data:', error);\n      }\n      _this.preprocessCallsigns();\n    })();\n  }\n  preprocessCallsigns() {\n    this.airplanes.forEach(airplane => {\n      const callsign = airplane.properties['callSign'];\n      const callsignWithoutSpaces = callsign.replace(/\\s/g, '');\n      // Map the callsign without spaces to the airplane feature\n      this.callsignMap[callsignWithoutSpaces] = airplane;\n    });\n  }\n  searchByCallsign() {\n    // Retrieve the preprocessed callsign from the map\n    const foundAirplane = this.callsignMap[this.searchCallsign];\n    if (foundAirplane) {\n      const coordinates = [foundAirplane.geometry.coordinates[0], foundAirplane.geometry.coordinates[1]];\n      // Center the map on the found airplane's coordinates\n      this.map.flyTo({\n        center: coordinates,\n        zoom: 10 // Adjust the zoom level as needed\n      });\n      // Create and open the popup for the found airplane\n      const altitudeInMeters = (foundAirplane.properties['altitude'] * 0.3048).toFixed(2);\n      const {\n        callSign,\n        altitude,\n        speed\n      } = foundAirplane.properties;\n      const popupContent = `\n        <div>\n          <strong>Call Sign:</strong> ${callSign}<br>\n          <strong>Altitude:</strong> ${altitudeInMeters} m<br>\n          <strong>Speed:</strong> ${speed} knots\n        </div>\n      `;\n      if (this.popup && this.popup.isOpen()) {\n        // If a popup is already open, update its content and position\n        this.popup.setLngLat(coordinates).setHTML(popupContent);\n      } else {\n        // If no popup is open, create a new one and open it\n        this.popup = new mapboxgl.Popup({\n          closeButton: false\n        }).setLngLat(coordinates).setHTML(popupContent).addTo(this.map);\n      }\n    }\n  }\n  toggleFilterInAir() {\n    this.showOnlyInAir = !this.showOnlyInAir;\n    this.filterAirplanes();\n    const source = this.map.getSource('airplanes');\n    if (source) {\n      source.setData({\n        type: 'FeatureCollection',\n        features: this.filteredAirplanes\n      });\n    }\n  }\n  filterAirplanes() {\n    if (this.showOnlyInAir) {\n      this.filteredAirplanes = this.airplanes.filter(airplane => airplane.properties['altitude'] > 0);\n    } else {\n      this.filteredAirplanes = this.airplanes;\n    }\n  }\n}\nMapComponent.ɵfac = function MapComponent_Factory(t) {\n  return new (t || MapComponent)();\n};\nMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapComponent,\n  selectors: [[\"app-map\"]],\n  decls: 19,\n  vars: 8,\n  consts: [[\"id\", \"map\"], [1, \"search-bar\"], [\"type\", \"text\", \"placeholder\", \"Search by callsign\", \"id\", \"search\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"id\", \"search-button\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-search\"], [1, \"filter-dropdown\"], [\"id\", \"filter-button\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-chevron-down\"], [1, \"filter-content\", 3, \"ngClass\"], [1, \"dropdown-button\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"checkbox-color\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"filter-flying\", 1, \"dropdown-button\", 3, \"disabled\", \"click\"], [\"id\", \"toggle-airports\", 1, \"dropdown-button\"]],\n  template: function MapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function MapComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.searchCallsign = $event;\n      })(\"keyup.enter\", function MapComponent_Template_input_keyup_enter_2_listener() {\n        return ctx.searchByCallsign();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function MapComponent_Template_button_click_3_listener() {\n        return ctx.searchByCallsign();\n      });\n      i0.ɵɵelement(4, \"i\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function MapComponent_Template_button_click_6_listener() {\n        return ctx.toggleFilterDropdown();\n      });\n      i0.ɵɵtext(7, \" Filter \");\n      i0.ɵɵelement(8, \"i\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 8)(10, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function MapComponent_Template_button_click_10_listener() {\n        return ctx.toggleHideAirplanes();\n      });\n      i0.ɵɵtext(11, \"Toggle Airplanes \");\n      i0.ɵɵelementStart(12, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function MapComponent_Template_input_ngModelChange_12_listener($event) {\n        return !(ctx.hideAirplanes = $event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function MapComponent_Template_button_click_13_listener() {\n        return ctx.toggleFilterInAir();\n      });\n      i0.ɵɵtext(14, \" Landed airplanes \");\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function MapComponent_Template_input_ngModelChange_15_listener($event) {\n        return !ctx.showOnlyInAir && !(ctx.hideAirplanes = $event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"button\", 12);\n      i0.ɵɵtext(17, \" Airports \");\n      i0.ɵɵelementStart(18, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function MapComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.showAirports = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchCallsign);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.filterDropdownOpen));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", !ctx.hideAirplanes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.hideAirplanes);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", !ctx.showOnlyInAir && !ctx.hideAirplanes);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.showAirports);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgClass],\n  styles: [\"[_nghost-%COMP%] {\\r\\n  height: 93vh;\\r\\n  width: 96vw;\\r\\n  margin-top: -1%;\\r\\n}\\r\\n#map[_ngcontent-%COMP%] {\\r\\n  height: 100vh;\\r\\n  width: 96vw;\\r\\n  margin-top: -1%;\\r\\n}\\r\\n.popup-style[_ngcontent-%COMP%] {\\r\\n  background-color: white;\\r\\n  padding: 10px;\\r\\n  border-radius: 4px;\\r\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\r\\n}\\r\\n\\r\\n#search[_ngcontent-%COMP%]{\\r\\n  height: 30px;\\r\\n  outline: none;\\r\\n  font-size: 1rem;\\r\\n  color: rgb(0, 0, 0);\\r\\n  border: 1px solid #000000;\\r\\n  border-radius: 6px;\\r\\n  padding: 0 7px;\\r\\n  margin: 0.5% 0%;\\r\\n  caret-color: black;\\r\\n  box-shadow: 0px 0px 5px 0px #8b8b8b;\\r\\n  border: none;\\r\\n  width:250px\\r\\n}\\r\\n\\r\\n.search-bar[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  left: 30px;\\r\\n}\\r\\n\\r\\n.search-bar[_ngcontent-%COMP%]   #search-button[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  right: 103px;\\r\\n  top: -1px;\\r\\n  border: none;\\r\\n  background: none;\\r\\n  width: 30px;\\r\\n  height: 30px;\\r\\n  cursor: pointer;\\r\\n  color: #676767;\\r\\n}\\r\\n\\r\\n.search-bar[_ngcontent-%COMP%]   .dropdown-button[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  height: 30px;\\r\\n  font-size: 1rem;\\r\\n  color: rgb(0, 0, 0);\\r\\n  border: 1px solid #000000;\\r\\n  padding: 0 7px;\\r\\n  margin: 0.5% 0%;\\r\\n  border: none;\\r\\n  background-color: white;\\r\\n  cursor: pointer;\\r\\n  width: 100%;\\r\\n  color: #4b4b4b\\r\\n}\\r\\n\\r\\n.dropdown-button[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\r\\n  opacity: 1;\\r\\n  pointer-events: none;\\r\\n  z-index: -1;\\r\\n}\\r\\n\\r\\n.checkbox-color[_ngcontent-%COMP%]{\\r\\n  accent-color: rgb(109, 214, 255);\\r\\n}\\r\\n\\r\\n.search-bar[_ngcontent-%COMP%]   .dropdown-button[_ngcontent-%COMP%]:hover{\\r\\n  background-color: #e0e0e0;\\r\\n\\r\\n}\\r\\n\\r\\n.airplane-icon[_ngcontent-%COMP%]:hover {\\r\\n  filter: brightness(120%);\\r\\n}\\r\\n\\r\\n.filter-content[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n  position: absolute;\\r\\n  background-color: white;\\r\\n  min-width: 200px;\\r\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\r\\n  padding: 12px 0px;\\r\\n  z-index: 1;\\r\\n  right: 100px;\\r\\n  border-radius: 6px;\\r\\n  top: 33px;\\r\\n}\\r\\n\\r\\n#filter-button[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  color: #676767 !important;\\r\\n  right: 105px;\\r\\n  height: 30px;\\r\\n  outline: none;\\r\\n  font-size: 1rem;\\r\\n  color: rgb(0, 0, 0);\\r\\n  border: 1px solid #000000;\\r\\n  padding: 0 7px;\\r\\n  margin: 0.5% 0%;\\r\\n  background-color: white;\\r\\n  border: none;\\r\\n  border-left:1px solid rgb(199, 199, 199);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.filter-content.show[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.filter-dropdown[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFwL21hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsV0FBVztFQUNYLGVBQWU7QUFDakI7QUFDQTtFQUNFLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHlDQUF5QztBQUMzQzs7QUFFQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLG1DQUFtQztFQUNuQyxZQUFZO0VBQ1o7QUFDRjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixTQUFTO0VBQ1QsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7RUFDZixjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsZUFBZTtFQUNmLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsZUFBZTtFQUNmLFdBQVc7RUFDWDtBQUNGOztBQUVBO0VBQ0UsVUFBVTtFQUNWLG9CQUFvQjtFQUNwQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSx5QkFBeUI7O0FBRTNCOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLCtDQUErQztFQUMvQyxpQkFBaUI7RUFDakIsVUFBVTtFQUNWLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsU0FBUztBQUNYOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osWUFBWTtFQUNaLGFBQWE7RUFDYixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsZUFBZTtFQUNmLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osd0NBQXdDO0VBQ3hDLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICBoZWlnaHQ6IDkzdmg7XHJcbiAgd2lkdGg6IDk2dnc7XHJcbiAgbWFyZ2luLXRvcDogLTElO1xyXG59XHJcbiNtYXAge1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgd2lkdGg6IDk2dnc7XHJcbiAgbWFyZ2luLXRvcDogLTElO1xyXG59XHJcbi5wb3B1cC1zdHlsZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XHJcbn1cclxuXHJcbiNzZWFyY2h7XHJcbiAgaGVpZ2h0OiAzMHB4O1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcclxuICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgcGFkZGluZzogMCA3cHg7XHJcbiAgbWFyZ2luOiAwLjUlIDAlO1xyXG4gIGNhcmV0LWNvbG9yOiBibGFjaztcclxuICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAwcHggIzhiOGI4YjtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgd2lkdGg6MjUwcHhcclxufVxyXG5cclxuLnNlYXJjaC1iYXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDEwcHg7XHJcbiAgbGVmdDogMzBweDtcclxufVxyXG5cclxuLnNlYXJjaC1iYXIgI3NlYXJjaC1idXR0b24ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICByaWdodDogMTAzcHg7XHJcbiAgdG9wOiAtMXB4O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gIHdpZHRoOiAzMHB4O1xyXG4gIGhlaWdodDogMzBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgY29sb3I6ICM2NzY3Njc7XHJcbn1cclxuXHJcbi5zZWFyY2gtYmFyIC5kcm9wZG93bi1idXR0b24ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGNvbG9yOiByZ2IoMCwgMCwgMCk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcclxuICBwYWRkaW5nOiAwIDdweDtcclxuICBtYXJnaW46IDAuNSUgMCU7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB3aWR0aDogMTAwJTtcclxuICBjb2xvcjogIzRiNGI0YlxyXG59XHJcblxyXG4uZHJvcGRvd24tYnV0dG9uIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgb3BhY2l0eTogMTtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICB6LWluZGV4OiAtMTtcclxufVxyXG5cclxuLmNoZWNrYm94LWNvbG9ye1xyXG4gIGFjY2VudC1jb2xvcjogcmdiKDEwOSwgMjE0LCAyNTUpO1xyXG59XHJcblxyXG4uc2VhcmNoLWJhciAuZHJvcGRvd24tYnV0dG9uOmhvdmVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlMGUwZTA7XHJcblxyXG59XHJcblxyXG4uYWlycGxhbmUtaWNvbjpob3ZlciB7XHJcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEyMCUpO1xyXG59XHJcblxyXG4uZmlsdGVyLWNvbnRlbnQge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIG1pbi13aWR0aDogMjAwcHg7XHJcbiAgYm94LXNoYWRvdzogMHB4IDhweCAxNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgcGFkZGluZzogMTJweCAwcHg7XHJcbiAgei1pbmRleDogMTtcclxuICByaWdodDogMTAwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gIHRvcDogMzNweDtcclxufVxyXG5cclxuI2ZpbHRlci1idXR0b24ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBjb2xvcjogIzY3Njc2NyAhaW1wb3J0YW50O1xyXG4gIHJpZ2h0OiAxMDVweDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgY29sb3I6IHJnYigwLCAwLCAwKTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwO1xyXG4gIHBhZGRpbmc6IDAgN3B4O1xyXG4gIG1hcmdpbjogMC41JSAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLWxlZnQ6MXB4IHNvbGlkIHJnYigxOTksIDE5OSwgMTk5KTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5maWx0ZXItY29udGVudC5zaG93IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmZpbHRlci1kcm9wZG93biB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["mapboxgl","axios","Papa","OPENSKY_API_URL","MAPBOX_ACCESS_TOKEN","MapComponent","constructor","ngOnInit","accessToken","initializeMap","parseCSVData","then","data","airportData","addMarkers","map","fetchFlightData","toggleFilterDropdown","filterDropdownOpen","toggleHideAirplanes","hideAirplanes","layerVisibility","setLayoutProperty","csvUrl","Promise","resolve","reject","get","response","csvData","parsedData","parse","header","catch","error","airportMarkers","forEach","airport","latitude","parseFloat","latitude_deg","longitude","longitude_deg","isNaN","markerElement","document","createElement","className","src","width","height","popupContent","name","iso_country","continent","marker","Marker","setLngLat","setPopup","Popup","closeButton","setHTML","getElement","style","cursor","push","toggleButton","getElementById","addEventListener","showAirports","remove","addTo","Map","container","center","zoom","on","addControl","NavigationControl","loadImage","image","console","addImage","event","coordinates","features","geometry","slice","callSign","altitude","speed","properties","popup","isOpen","altitudeInMeters","toFixed","getCanvas","flightData","states","airplanes","flightArr","type","heading","filterAirplanes","airplaneSource","getSource","setData","filteredAirplanes","addSource","addLayer","id","source","layout","base","stops","paint","preprocessCallsigns","airplane","callsign","callsignWithoutSpaces","replace","callsignMap","searchByCallsign","foundAirplane","searchCallsign","flyTo","toggleFilterInAir","showOnlyInAir","filter","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/map/map.component.ts","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/map/map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport mapboxgl, { LngLatLike } from 'mapbox-gl';\r\nimport { Feature, Point } from 'geojson';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\n\r\nconst OPENSKY_API_URL = 'https://opensky-network.org/api/states/all'; //\r\nconst MAPBOX_ACCESS_TOKEN =\r\n  'pk.eyJ1IjoibGF1cmFnaCIsImEiOiJjbGk4cThscnMxdjY0M2VtbDc3Yjdsa25wIn0.S3BdCi6irPxokf4rJcGBMQ';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css'],\r\n})\r\nexport class MapComponent implements OnInit {\r\n  private map!: mapboxgl.Map;\r\n  private popup!: mapboxgl.Popup;\r\n  searchCallsign: string = '';\r\n  showOnlyInAir: boolean = false;\r\n  airplanes: Feature<Point>[] = [];\r\n  filteredAirplanes: Feature<Point>[] = [];\r\n  private callsignMap: { [key: string]: Feature<Point> } = {};\r\n  airportData: any[] = []; // Array to store the parsed airport data\r\n  showAirports: boolean = false;\r\n  hideAirplanes: boolean = false;\r\n  filterDropdownOpen: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    mapboxgl.accessToken = MAPBOX_ACCESS_TOKEN;\r\n\r\n    this.initializeMap();\r\n    this.parseCSVData().then((data) => {\r\n      this.airportData = data;\r\n      this.addMarkers(this.map);\r\n    });\r\n    this.fetchFlightData();\r\n  }\r\n\r\n  toggleFilterDropdown() {\r\n    this.filterDropdownOpen = !this.filterDropdownOpen;\r\n  }\r\n\r\n  toggleHideAirplanes(): void {\r\n    this.hideAirplanes = !this.hideAirplanes;\r\n    const layerVisibility = this.hideAirplanes ? 'none' : 'visible';\r\n    this.map.setLayoutProperty('airplane-layer', 'visibility', layerVisibility);\r\n  }\r\n\r\n\r\n  parseCSVData(): Promise<any[]> {\r\n    const csvUrl = 'assets/filtered_airports.csv'; // Path to your airport data file\r\n\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(csvUrl)\r\n        .then((response) => {\r\n          const csvData = response.data;\r\n          const parsedData = Papa.parse(csvData, { header: true }).data;\r\n          resolve(parsedData);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  addMarkers(map: mapboxgl.Map) {\r\n    const airportMarkers: mapboxgl.Marker[] = [];\r\n\r\n    this.airportData.forEach((airport) => {\r\n      const latitude = parseFloat(airport.latitude_deg);\r\n      const longitude = parseFloat(airport.longitude_deg);\r\n\r\n      if (!isNaN(latitude) && !isNaN(longitude)) {\r\n        const markerElement = document.createElement('img');\r\n        markerElement.className = 'airport-marker';\r\n        markerElement.src = 'assets/airport.png';\r\n        markerElement.width = 20;\r\n        markerElement.height = 20;\r\n\r\n        const popupContent = `\r\n          <div>\r\n            <strong>Name:</strong> ${airport.name}<br>\r\n            <strong>Country:</strong> ${airport.iso_country}<br>\r\n            <strong>Continent:</strong> ${airport.continent}\r\n          </div>\r\n        `;\r\n\r\n        const marker = new mapboxgl.Marker(markerElement)\r\n          .setLngLat([longitude, latitude])\r\n          .setPopup(\r\n            new mapboxgl.Popup({ closeButton: false }).setHTML(popupContent)\r\n          );\r\n\r\n        // Change cursor to pointer on marker hover\r\n        marker.getElement().style.cursor = 'pointer';\r\n\r\n        airportMarkers.push(marker);\r\n      }\r\n    });\r\n\r\n   \r\n\r\n    // Toggle visibility of airport markers\r\n    const toggleButton = document.getElementById('toggle-airports');\r\n\r\n    toggleButton?.addEventListener('click', () => {\r\n      if (this.showAirports) {\r\n        airportMarkers.forEach((marker) => {\r\n          marker.remove();\r\n        });\r\n      } else {\r\n        airportMarkers.forEach((marker) => {\r\n          marker.addTo(map);\r\n        });\r\n      }\r\n\r\n      this.showAirports = !this.showAirports;\r\n    });\r\n  }\r\n\r\n  private initializeMap(): void {\r\n    this.map = new mapboxgl.Map({\r\n      container: 'map',\r\n      style: 'mapbox://styles/mapbox/outdoors-v11',\r\n      center: [0.45, 51.47],\r\n      zoom: 4,\r\n    });\r\n\r\n    this.map.on('load', () => {\r\n      this.map.addControl(new mapboxgl.NavigationControl());\r\n\r\n      this.map.loadImage('/assets/airplane.png', (error, image) => {\r\n        if (error) {\r\n          console.error('Error loading the airplane icon image:', error);\r\n        } else {\r\n          this.map.addImage('airplane-icon', image);\r\n        }\r\n      });\r\n\r\n      this.map.on('click', 'airplane-layer', (event) => {\r\n        const coordinates = (\r\n          event.features[0].geometry as Point\r\n        ).coordinates.slice();\r\n        const { callSign, altitude, speed } = event.features[0].properties;\r\n\r\n        // Ensure that the popup is not already open\r\n        if (this.popup && this.popup.isOpen()) {\r\n          this.popup.remove();\r\n        }\r\n        const altitudeInMeters = (altitude * 0.3048).toFixed(2);\r\n\r\n        this.popup = new mapboxgl.Popup({ closeButton: false })\r\n          .setLngLat(coordinates as LngLatLike)\r\n          .setHTML(\r\n            `<div>\r\n              <strong>Call Sign:</strong> ${callSign}<br>\r\n              <strong>Altitude:</strong> ${altitudeInMeters} m<br>\r\n              <strong>Speed:</strong> ${speed} knots\r\n            </div>`\r\n          )\r\n          .addTo(this.map);\r\n      });\r\n\r\n      // Change the cursor style when hovering over an airplane marker\r\n      this.map.on('mouseenter', 'airplane-layer', () => {\r\n        this.map.getCanvas().style.cursor = 'pointer';\r\n      });\r\n\r\n      // Change the cursor style back to default when not hovering over an airplane marker\r\n      this.map.on('mouseleave', 'airplane-layer', () => {\r\n        this.map.getCanvas().style.cursor = '';\r\n      });\r\n    });\r\n  }\r\n\r\n  private async fetchFlightData(): Promise<void> {\r\n    try {\r\n      const response = await axios.get(OPENSKY_API_URL);\r\n      const flightData = response.data.states;\r\n      this.airplanes = flightData.map((flightArr: any) => {\r\n        return {\r\n          type: 'Feature',\r\n          geometry: {\r\n            type: 'Point',\r\n            coordinates: [flightArr[5], flightArr[6]],\r\n          },\r\n          properties: {\r\n            callSign: flightArr[1] || '',\r\n            altitude: flightArr[7] || 0,\r\n            speed: flightArr[9] || 0,\r\n            heading: flightArr[10] || 0,\r\n          },\r\n        } as Feature<Point>;\r\n      });\r\n\r\n      this.filterAirplanes();\r\n\r\n      const airplaneSource = this.map.getSource(\r\n        'airplanes'\r\n      ) as mapboxgl.GeoJSONSource;\r\n      if (airplaneSource) {\r\n        airplaneSource.setData({\r\n          type: 'FeatureCollection',\r\n          features: this.filteredAirplanes,\r\n        });\r\n      } else {\r\n        this.map.addSource('airplanes', {\r\n          type: 'geojson',\r\n          data: {\r\n            type: 'FeatureCollection',\r\n            features: this.filteredAirplanes,\r\n          },\r\n        });\r\n\r\n        this.map.addLayer({\r\n          id: 'airplane-layer',\r\n          type: 'symbol',\r\n          source: 'airplanes',\r\n          layout: {\r\n            'icon-image': 'airplane-icon',\r\n            'icon-size': {\r\n              base: 1,\r\n              stops: [\r\n                [0, 0.001],\r\n                [8, 0.04],\r\n                [16, 0.2],\r\n              ],\r\n            },\r\n            'icon-allow-overlap': true,\r\n            'icon-rotate': ['get', 'heading'],\r\n            'visibility': this.hideAirplanes ? 'none' : 'visible',\r\n          },\r\n          paint: {},\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching flight data:', error);\r\n    }\r\n    this.preprocessCallsigns();\r\n  }\r\n\r\n  private preprocessCallsigns(): void {\r\n    this.airplanes.forEach((airplane: Feature<Point>) => {\r\n      const callsign = airplane.properties['callSign'];\r\n      const callsignWithoutSpaces = callsign.replace(/\\s/g, '');\r\n      // Map the callsign without spaces to the airplane feature\r\n      this.callsignMap[callsignWithoutSpaces] = airplane;\r\n    });\r\n  }\r\n\r\n  searchByCallsign(): void {\r\n    // Retrieve the preprocessed callsign from the map\r\n    const foundAirplane = this.callsignMap[this.searchCallsign];\r\n\r\n    if (foundAirplane) {\r\n      const coordinates: LngLatLike = [\r\n        foundAirplane.geometry.coordinates[0],\r\n        foundAirplane.geometry.coordinates[1],\r\n      ];\r\n\r\n      // Center the map on the found airplane's coordinates\r\n      this.map.flyTo({\r\n        center: coordinates,\r\n        zoom: 10, // Adjust the zoom level as needed\r\n      });\r\n\r\n      // Create and open the popup for the found airplane\r\n      const altitudeInMeters = (\r\n        foundAirplane.properties['altitude'] * 0.3048\r\n      ).toFixed(2);\r\n      const { callSign, altitude, speed } = foundAirplane.properties;\r\n      const popupContent = `\r\n        <div>\r\n          <strong>Call Sign:</strong> ${callSign}<br>\r\n          <strong>Altitude:</strong> ${altitudeInMeters} m<br>\r\n          <strong>Speed:</strong> ${speed} knots\r\n        </div>\r\n      `;\r\n\r\n      if (this.popup && this.popup.isOpen()) {\r\n        // If a popup is already open, update its content and position\r\n        this.popup.setLngLat(coordinates).setHTML(popupContent);\r\n      } else {\r\n        // If no popup is open, create a new one and open it\r\n        this.popup = new mapboxgl.Popup({ closeButton: false })\r\n          .setLngLat(coordinates)\r\n          .setHTML(popupContent)\r\n          .addTo(this.map);\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleFilterInAir(): void {\r\n    this.showOnlyInAir = !this.showOnlyInAir;\r\n    this.filterAirplanes();\r\n    const source = this.map.getSource('airplanes') as mapboxgl.GeoJSONSource;\r\n    if (source) {\r\n      source.setData({\r\n        type: 'FeatureCollection',\r\n        features: this.filteredAirplanes,\r\n      });\r\n    }\r\n  }\r\n\r\n  private filterAirplanes(): void {\r\n    if (this.showOnlyInAir) {\r\n      this.filteredAirplanes = this.airplanes.filter(\r\n        (airplane: Feature<Point>) => airplane.properties['altitude'] > 0\r\n      );\r\n    } else {\r\n      this.filteredAirplanes = this.airplanes;\r\n    }\r\n  }\r\n}\r\n","<div id=\"map\"></div>\r\n<div class=\"search-bar\">\r\n  <input\r\n    type=\"text\"\r\n    placeholder=\"Search by callsign\"\r\n    [(ngModel)]=\"searchCallsign\"\r\n    (keyup.enter)=\"searchByCallsign()\"\r\n    id=\"search\"\r\n  />\r\n  <button id=\"search-button\" (click)=\"searchByCallsign()\">\r\n    <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n  </button>\r\n\r\n  <!-- Filter dropdown -->\r\n  <div class=\"filter-dropdown\">\r\n    <button id=\"filter-button\" (click)=\"toggleFilterDropdown()\">\r\n      Filter <i class=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>\r\n    </button>\r\n    <div class=\"filter-content\" [ngClass]=\"{ 'show': filterDropdownOpen }\">\r\n      <button class=\"dropdown-button\" (click)=\"toggleHideAirplanes()\">Toggle Airplanes\r\n        <input type=\"checkbox\" class=\"checkbox-color\"  [(ngModel)] = \"!hideAirplanes\">\r\n      </button>\r\n      <button id=\"filter-flying\" [disabled]=\"hideAirplanes\" class=\"dropdown-button\" (click)=\"toggleFilterInAir()\">\r\n        Landed airplanes\r\n        <input type=\"checkbox\" class=\"checkbox-color\"  [(ngModel)] = \"!showOnlyInAir && !hideAirplanes\">\r\n      </button>\r\n      <button class=\"dropdown-button\" id=\"toggle-airports\">\r\n        Airports\r\n        <input type=\"checkbox\" class=\"checkbox-color\"  [(ngModel)] = \"showAirports\">\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}