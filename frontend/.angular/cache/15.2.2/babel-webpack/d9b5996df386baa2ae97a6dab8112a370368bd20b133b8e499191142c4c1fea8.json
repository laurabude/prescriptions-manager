{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/doctor.service\";\nimport * as i2 from \"@angular/material/table\";\nfunction DoctorPatientsListComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Full Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r14.name, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Age \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r15.age, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Sex \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r16.sex, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Height (cm) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r17.height, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Weight (kg) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r18.weight, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Allergies \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r19.allergies || \"N/A\", \" \");\n  }\n}\nfunction DoctorPatientsListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 17);\n  }\n}\nfunction DoctorPatientsListComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 18);\n  }\n}\nconst _c0 = function () {\n  return [5, 10, 25, 100];\n};\nexport class DoctorPatientsListComponent {\n  constructor(doctorService) {\n    this.doctorService = doctorService;\n    this.displayedColumns = ['fullName', 'age', 'sex', 'height', 'weight', 'allergies'];\n    this.patients = [];\n    // Initialize the data source\n    this.dataSource = new MatTableDataSource(this.patients);\n  }\n  ngOnInit() {\n    this.getPatients();\n  }\n  ngAfterViewInit() {\n    // Set up the paginator after the view is initialized\n    this.dataSource.paginator = this.paginator;\n  }\n  getPatients() {\n    this.doctorService.getPatients().subscribe(data => {\n      this.patients = data;\n      this.dataSource.data = this.patients;\n      console.log(this.patients);\n    }, error => {\n      console.error('Error fetching patients:', error);\n    });\n  }\n}\nDoctorPatientsListComponent.ɵfac = function DoctorPatientsListComponent_Factory(t) {\n  return new (t || DoctorPatientsListComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n};\nDoctorPatientsListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DoctorPatientsListComponent,\n  selectors: [[\"app-doctor-patients-list\"]],\n  viewQuery: function DoctorPatientsListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n    }\n  },\n  decls: 26,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"profile-card\"], [1, \"list-heading\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"fullName\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"age\"], [\"matColumnDef\", \"sex\"], [\"matColumnDef\", \"height\"], [\"matColumnDef\", \"weight\"], [\"matColumnDef\", \"allergies\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function DoctorPatientsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n      i0.ɵɵtext(3, \"Patient Information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 3);\n      i0.ɵɵelementContainerStart(5, 4);\n      i0.ɵɵtemplate(6, DoctorPatientsListComponent_th_6_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(7, DoctorPatientsListComponent_td_7_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(8, 7);\n      i0.ɵɵtemplate(9, DoctorPatientsListComponent_th_9_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(10, DoctorPatientsListComponent_td_10_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(11, 8);\n      i0.ɵɵtemplate(12, DoctorPatientsListComponent_th_12_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(13, DoctorPatientsListComponent_td_13_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(14, 9);\n      i0.ɵɵtemplate(15, DoctorPatientsListComponent_th_15_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(16, DoctorPatientsListComponent_td_16_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(17, 10);\n      i0.ɵɵtemplate(18, DoctorPatientsListComponent_th_18_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(19, DoctorPatientsListComponent_td_19_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(20, 11);\n      i0.ɵɵtemplate(21, DoctorPatientsListComponent_th_21_Template, 2, 0, \"th\", 5);\n      i0.ɵɵtemplate(22, DoctorPatientsListComponent_td_22_Template, 2, 1, \"td\", 6);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(23, DoctorPatientsListComponent_tr_23_Template, 1, 0, \"tr\", 12);\n      i0.ɵɵtemplate(24, DoctorPatientsListComponent_tr_24_Template, 1, 0, \"tr\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(25, \"mat-paginator\", 14);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(4, _c0));\n    }\n  },\n  dependencies: [i2.MatTable, i2.MatHeaderCellDef, i2.MatHeaderRowDef, i2.MatColumnDef, i2.MatCellDef, i2.MatRowDef, i2.MatHeaderCell, i2.MatCell, i2.MatHeaderRow, i2.MatRow],\n  styles: [\".container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    overflow: hidden;\\n}\\n\\n.profile-card[_ngcontent-%COMP%] {\\n    max-width: 800px;\\n    width: 100%;\\n    padding: 20px;\\n    border-radius: 10px;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n    margin-top: 20px;\\n    overflow: hidden;\\n}\\n\\n.list-heading[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\n.mat-elevation-z8[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9yLXBhdGllbnRzLWxpc3QvZG9jdG9yLXBhdGllbnRzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUNBQXVDO0lBQ3ZDLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnByb2ZpbGUtY2FyZCB7XG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ubGlzdC1oZWFkaW5nIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5tYXQtZWxldmF0aW9uLXo4IHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["MatPaginator","MatTableDataSource","i0","DoctorPatientsListComponent","constructor","doctorService","dataSource","patients","ngOnInit","getPatients","ngAfterViewInit","paginator","subscribe","data","console","log","error","selectors","viewQuery"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-patients-list/doctor-patients-list.component.ts","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-patients-list/doctor-patients-list.component.html"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DoctorService } from '../_services/doctor.service';\n\n@Component({\n  selector: 'app-doctor-patients-list',\n  templateUrl: './doctor-patients-list.component.html',\n  styleUrls: ['./doctor-patients-list.component.css']\n})\nexport class DoctorPatientsListComponent implements OnInit, AfterViewInit {\n\n  displayedColumns: string[] = ['fullName', 'age', 'sex', 'height', 'weight', 'allergies'];\n  patients: any[] = [];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private doctorService: DoctorService) {\n    // Initialize the data source\n    this.dataSource = new MatTableDataSource<any>(this.patients);\n  }\n\n  ngOnInit(): void {\n    this.getPatients();\n  }\n\n  ngAfterViewInit(): void {\n    // Set up the paginator after the view is initialized\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getPatients() {\n    this.doctorService.getPatients().subscribe(\n      (data: any) => {\n        this.patients = data;\n       this.dataSource.data = this.patients;\n        console.log(this.patients);\n      },\n      (error) => {\n        console.error('Error fetching patients:', error);\n      }\n    );\n  }\n}\n","<!-- doctor-patients-list.component.html -->\n\n<div class=\"container\">\n    <div class=\"profile-card\">\n        <h2 class=\"list-heading\">Patient Information</h2>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <ng-container matColumnDef=\"fullName\">\n                <th mat-header-cell *matHeaderCellDef> Full Name </th>\n                <td mat-cell *matCellDef=\"let patient\"> {{ patient.name }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"age\">\n                <th mat-header-cell *matHeaderCellDef> Age </th>\n                <td mat-cell *matCellDef=\"let patient\"> {{ patient.age }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"sex\">\n                <th mat-header-cell *matHeaderCellDef> Sex </th>\n                <td mat-cell *matCellDef=\"let patient\"> {{ patient.sex }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"height\">\n                <th mat-header-cell *matHeaderCellDef> Height (cm) </th>\n                <td mat-cell *matCellDef=\"let patient\"> {{ patient.height }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"weight\">\n                <th mat-header-cell *matHeaderCellDef> Weight (kg) </th>\n                <td mat-cell *matCellDef=\"let patient\"> {{ patient.weight }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"allergies\">\n                <th mat-header-cell *matHeaderCellDef> Allergies </th>\n                <td mat-cell *matCellDef=\"let patient\"> {{ patient.allergies || 'N/A' }} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n</div>\n<!-- doctor-patients-list.component.html -->\n\n<!-- ... (other HTML code) -->\n\n<mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" showFirstLastButtons></mat-paginator>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}