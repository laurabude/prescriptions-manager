{"ast":null,"code":"// medication-calendar.component.ts\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { addDays, startOfDay, isSameDay } from 'date-fns';\nlet MedicationCalendarComponent = class MedicationCalendarComponent {\n  constructor() {\n    this.patientName = 'John Doe';\n    this.viewDate = new Date(); // Current date\n    this.activeDayIsOpen = true;\n    this.medications = [{\n      name: 'Medication 1',\n      dosage: '10mg',\n      time: '8:00 AM',\n      days: [1, 3, 5]\n    }, {\n      name: 'Medication 2',\n      dosage: '20mg',\n      time: '12:00 PM',\n      days: [2, 4, 6]\n    }\n    // Add more medication data as needed\n    ];\n\n    this.medicationEvents = [];\n    this.updateCalendarEvents();\n  }\n  updateCalendarEvents() {\n    this.medicationEvents = [];\n    this.medications.forEach((medication, index) => {\n      medication.days.forEach(day => {\n        const event = {\n          start: addDays(startOfDay(this.viewDate), day - 1),\n          title: `${medication.name} - ${medication.dosage} - ${medication.time}`,\n          color: {\n            primary: '#1e90ff',\n            secondary: '#D1E8FF'\n          },\n          meta: {\n            medicationIndex: index\n          }\n        };\n        this.medicationEvents.push(event);\n      });\n    });\n  }\n  onDayClicked({\n    day\n  }) {\n    if (isSameDay(this.viewDate, day.date)) {\n      this.activeDayIsOpen = !this.activeDayIsOpen;\n    } else {\n      this.viewDate = day.date;\n      this.activeDayIsOpen = true;\n    }\n  }\n  onEventClicked({\n    event\n  }) {\n    const medicationIndex = event.meta.medicationIndex;\n    const medication = this.medications[medicationIndex];\n    // Handle event click as needed, e.g., show medication details\n    console.log('Medication Clicked:', medication);\n  }\n  onEventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }) {\n    // Handle event time changes as needed\n    console.log('Event Times Changed:', event, newStart, newEnd);\n  }\n};\nMedicationCalendarComponent = __decorate([Component({\n  selector: 'app-medication-calendar',\n  templateUrl: './medication-calendar.component.html',\n  styleUrls: ['./medication-calendar.component.css']\n})], MedicationCalendarComponent);\nexport { MedicationCalendarComponent };","map":{"version":3,"mappings":"AAAA;;AAEA,SAASA,SAAS,QAAQ,eAAe;AAMzC,SAASC,OAAO,EAAEC,UAAU,EAAEC,SAAS,QAAQ,UAAU;AAOlD,IAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EAatCC;IAZA,gBAAW,GAAW,UAAU;IAChC,aAAQ,GAAS,IAAIC,IAAI,EAAE,CAAC,CAAC;IAC7B,oBAAe,GAAY,IAAI;IAE/B,gBAAW,GAAU,CACnB;MAAEC,IAAI,EAAE,cAAc;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAC,CAAE,EAC1E;MAAEH,IAAI,EAAE,cAAc;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAC;IACzE;IAAA,CACD;;IAED,qBAAgB,GAAoB,EAAE;IAGpC,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoB;IAClB,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAE1B,IAAI,CAACC,WAAW,CAACC,OAAO,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAI;MAC7CD,UAAU,CAACL,IAAI,CAACI,OAAO,CAAEG,GAAG,IAAI;QAC9B,MAAMC,KAAK,GAAkB;UAC3BC,KAAK,EAAElB,OAAO,CAACC,UAAU,CAAC,IAAI,CAACkB,QAAQ,CAAC,EAAEH,GAAG,GAAG,CAAC,CAAC;UAClDI,KAAK,EAAE,GAAGN,UAAU,CAACR,IAAI,MAAMQ,UAAU,CAACP,MAAM,MAAMO,UAAU,CAACN,IAAI,EAAE;UACvEa,KAAK,EAAE;YAAEC,OAAO,EAAE,SAAS;YAAEC,SAAS,EAAE;UAAS,CAAE;UACnDC,IAAI,EAAE;YAAEC,eAAe,EAAEV;UAAK;SAC/B;QAED,IAAI,CAACJ,gBAAgB,CAACe,IAAI,CAACT,KAAK,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAU,YAAY,CAAC;IAAEX;EAAG,CAAiC;IACjD,IAAId,SAAS,CAAC,IAAI,CAACiB,QAAQ,EAAEH,GAAG,CAACY,IAAI,CAAC,EAAE;MACtC,IAAI,CAACC,eAAe,GAAG,CAAC,IAAI,CAACA,eAAe;KAC7C,MAAM;MACL,IAAI,CAACV,QAAQ,GAAGH,GAAG,CAACY,IAAI;MACxB,IAAI,CAACC,eAAe,GAAG,IAAI;;EAE/B;EAEAC,cAAc,CAAC;IAAEb;EAAK,CAA4B;IAChD,MAAMQ,eAAe,GAAGR,KAAK,CAACO,IAAI,CAACC,eAAe;IAClD,MAAMX,UAAU,GAAG,IAAI,CAACF,WAAW,CAACa,eAAe,CAAC;IACpD;IACAM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAElB,UAAU,CAAC;EAChD;EAEAmB,mBAAmB,CAAC;IAClBhB,KAAK;IACLiB,QAAQ;IACRC;EAAM,CACyB;IAC/B;IACAJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEf,KAAK,EAAEiB,QAAQ,EAAEC,MAAM,CAAC;EAC9D;CACD;AA1DYhC,2BAA2B,eALvCJ,SAAS,CAAC;EACTqC,QAAQ,EAAE,yBAAyB;EACnCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,GACWnC,2BAA2B,CA0DvC;SA1DYA,2BAA2B","names":["Component","addDays","startOfDay","isSameDay","MedicationCalendarComponent","constructor","Date","name","dosage","time","days","updateCalendarEvents","medicationEvents","medications","forEach","medication","index","day","event","start","viewDate","title","color","primary","secondary","meta","medicationIndex","push","onDayClicked","date","activeDayIsOpen","onEventClicked","console","log","onEventTimesChanged","newStart","newEnd","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/calendar/calendar.component.ts"],"sourcesContent":["// medication-calendar.component.ts\n\nimport { Component } from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarMonthViewDay,\n  CalendarEventTimesChangedEvent,\n} from 'angular-calendar';\nimport { addDays, startOfDay, isSameDay } from 'date-fns';\n\n@Component({\n  selector: 'app-medication-calendar',\n  templateUrl: './medication-calendar.component.html',\n  styleUrls: ['./medication-calendar.component.css'],\n})\nexport class MedicationCalendarComponent {\n  patientName: string = 'John Doe';\n  viewDate: Date = new Date(); // Current date\n  activeDayIsOpen: boolean = true;\n\n  medications: any[] = [\n    { name: 'Medication 1', dosage: '10mg', time: '8:00 AM', days: [1, 3, 5] },\n    { name: 'Medication 2', dosage: '20mg', time: '12:00 PM', days: [2, 4, 6] },\n    // Add more medication data as needed\n  ];\n\n  medicationEvents: CalendarEvent[] = [];\n\n  constructor() {\n    this.updateCalendarEvents();\n  }\n\n  updateCalendarEvents(): void {\n    this.medicationEvents = [];\n\n    this.medications.forEach((medication, index) => {\n      medication.days.forEach((day) => {\n        const event: CalendarEvent = {\n          start: addDays(startOfDay(this.viewDate), day - 1),\n          title: `${medication.name} - ${medication.dosage} - ${medication.time}`,\n          color: { primary: '#1e90ff', secondary: '#D1E8FF' },\n          meta: { medicationIndex: index },\n        };\n\n        this.medicationEvents.push(event);\n      });\n    });\n  }\n\n  onDayClicked({ day }: { day: CalendarMonthViewDay }): void {\n    if (isSameDay(this.viewDate, day.date)) {\n      this.activeDayIsOpen = !this.activeDayIsOpen;\n    } else {\n      this.viewDate = day.date;\n      this.activeDayIsOpen = true;\n    }\n  }\n\n  onEventClicked({ event }: { event: CalendarEvent }): void {\n    const medicationIndex = event.meta.medicationIndex;\n    const medication = this.medications[medicationIndex];\n    // Handle event click as needed, e.g., show medication details\n    console.log('Medication Clicked:', medication);\n  }\n\n  onEventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    // Handle event time changes as needed\n    console.log('Event Times Changed:', event, newStart, newEnd);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}