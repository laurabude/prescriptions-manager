{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./_services/storage.service\";\nimport * as i2 from \"./_services/auth.service\";\nimport * as i3 from \"./_shared/event-bus.service\";\nimport * as i4 from \"./_services/log.service\";\nimport * as i5 from \"./navbar/navbar.component\";\nimport * as i6 from \"./body/body.component\";\nexport class AppComponent {\n  constructor(storageService, authService, eventBusService, logService) {\n    this.storageService = storageService;\n    this.authService = authService;\n    this.eventBusService = eventBusService;\n    this.logService = logService;\n    this.roles = [];\n    this.isLoggedIn = false;\n    this.showAdminBoard = false;\n    this.showModeratorBoard = false;\n    this.isSideNavCollapsed = false;\n    this.screenWidth = 0;\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.storageService.isLoggedIn();\n    if (this.isLoggedIn) {\n      const user = this.storageService.getUser();\n      this.roles = user.roles;\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n      this.username = user.username;\n      this.userPic = user.pic;\n    }\n    this.eventBusSub = this.eventBusService.on('logout', () => {\n      this.logout();\n    });\n    console.log(this.username);\n  }\n  logout() {\n    this.authService.logout().subscribe({\n      next: res => {\n        console.log(res);\n        this.storageService.clean();\n        window.location.reload();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  onToggleSideNav(data) {\n    this.screenWidth = data.screenWidth;\n    this.isSideNavCollapsed = data.collapsed;\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.EventBusService), i0.ɵɵdirectiveInject(i4.LogService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[3, \"isLoggedIn\", \"username\"], [3, \"screenWidth\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-navbar\", 0)(1, \"app-body\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"isLoggedIn\", ctx.isLoggedIn)(\"username\", ctx.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"screenWidth\", ctx.screenWidth);\n    }\n  },\n  dependencies: [i5.NavbarComponent, i6.BodyComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAiBA,OAAM,MAAOA,YAAY;EAUvBC,YACUC,cAA8B,EAC9BC,WAAwB,EACxBC,eAAgC,EAChCC,UAAsB;IAHtB,mBAAc,GAAdH,cAAc;IACd,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;IACf,eAAU,GAAVC,UAAU;IAbZ,UAAK,GAAa,EAAE;IAC5B,eAAU,GAAG,KAAK;IAClB,mBAAc,GAAG,KAAK;IACtB,uBAAkB,GAAG,KAAK;IA6C1B,uBAAkB,GAAG,KAAK;IAC1B,gBAAW,GAAG,CAAC;EAnCZ;EACHC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,cAAc,CAACK,UAAU,EAAE;IAClD,IAAI,IAAI,CAACA,UAAU,EAAE;MACnB,MAAMC,IAAI,GAAG,IAAI,CAACN,cAAc,CAACO,OAAO,EAAE;MAC1C,IAAI,CAACC,KAAK,GAAGF,IAAI,CAACE,KAAK;MAEvB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACD,KAAK,CAACE,QAAQ,CAAC,YAAY,CAAC;MACvD,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACH,KAAK,CAACE,QAAQ,CAAC,gBAAgB,CAAC;MAE/D,IAAI,CAACE,QAAQ,GAAGN,IAAI,CAACM,QAAQ;MAC7B,IAAI,CAACC,OAAO,GAAGP,IAAI,CAACQ,GAAG;;IAGzB,IAAI,CAACC,WAAW,GAAG,IAAI,CAACb,eAAe,CAACc,EAAE,CAAC,QAAQ,EAAE,MAAK;MACxD,IAAI,CAACC,MAAM,EAAE;IACf,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ,CAAC;EAC5B;EAEAK,MAAM;IACJ,IAAI,CAAChB,WAAW,CAACgB,MAAM,EAAE,CAACG,SAAS,CAAC;MAClCC,IAAI,EAAGC,GAAG,IAAI;QACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;QAChB,IAAI,CAACtB,cAAc,CAACuB,KAAK,EAAE;QAE3BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAKAC,eAAe,CAACC,IAAmB;IACjC,IAAI,CAACC,WAAW,GAAGD,IAAI,CAACC,WAAW;IACnC,IAAI,CAACC,kBAAkB,GAAGF,IAAI,CAACG,SAAS;EAC1C;;AAvDWnC,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAoC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjBzBC,gCAAyE;;;MAA7DA,2CAAyB;MAE3BA,eAA2B;MAA3BA,6CAA2B","names":["AppComponent","constructor","storageService","authService","eventBusService","logService","ngOnInit","isLoggedIn","user","getUser","roles","showAdminBoard","includes","showModeratorBoard","username","userPic","pic","eventBusSub","on","logout","console","log","subscribe","next","res","clean","window","location","reload","error","err","onToggleSideNav","data","screenWidth","isSideNavCollapsed","collapsed","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/app.component.ts","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { LogService } from './_services/log.service';\r\nimport { StorageService } from './_services/storage.service';\r\nimport { EventBusService } from './_shared/event-bus.service';\r\n\r\ninterface SideNavToggle {\r\n  screenWidth: number;\r\n  collapsed: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  private roles: string[] = [];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username?: string;\r\n  userPic?: string;\r\n\r\n  eventBusSub?: Subscription;\r\n\r\n  constructor(\r\n    private storageService: StorageService,\r\n    private authService: AuthService,\r\n    private eventBusService: EventBusService,\r\n    private logService: LogService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = this.storageService.isLoggedIn();\r\n    if (this.isLoggedIn) {\r\n      const user = this.storageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\r\n\r\n      this.username = user.username;\r\n      this.userPic = user.pic;\r\n    }\r\n\r\n    this.eventBusSub = this.eventBusService.on('logout', () => {\r\n      this.logout();\r\n    });\r\n    console.log(this.username);\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout().subscribe({\r\n      next: (res) => {\r\n        console.log(res);\r\n        this.storageService.clean();\r\n\r\n        window.location.reload();\r\n      },\r\n      error: (err) => {\r\n        console.log(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  isSideNavCollapsed = false;\r\n  screenWidth = 0;\r\n\r\n  onToggleSideNav(data: SideNavToggle): void {\r\n    this.screenWidth = data.screenWidth;\r\n    this.isSideNavCollapsed = data.collapsed;\r\n  }\r\n}\r\n","<app-navbar [isLoggedIn]=\"isLoggedIn\" [username]=\"username\"></app-navbar>\r\n\r\n<app-body [screenWidth]=\"screenWidth\"></app-body>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}