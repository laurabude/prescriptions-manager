{"ast":null,"code":"import { addDays, startOfDay, isSameDay } from 'date-fns';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-calendar\";\nexport class CalendarComponent {\n  constructor() {\n    this.patientName = 'John Doe';\n    this.viewDate = new Date(); // Current date\n    this.activeDayIsOpen = true;\n    this.medications = [{\n      name: 'Medication 1',\n      dosage: '10mg',\n      time: '8:00 AM',\n      days: [1, 3, 5]\n    }, {\n      name: 'Medication 2',\n      dosage: '20mg',\n      time: '12:00 PM',\n      days: [2, 4, 6]\n    }\n    // Add more medication data as needed\n    ];\n\n    this.medicationEvents = [];\n    this.updateCalendarEvents();\n  }\n  updateCalendarEvents() {\n    this.medicationEvents = [];\n    this.medications.forEach((medication, index) => {\n      medication.days.forEach(day => {\n        const event = {\n          start: addDays(startOfDay(this.viewDate), day - 1),\n          title: `${medication.name} - ${medication.dosage} - ${medication.time}`,\n          color: {\n            primary: '#1e90ff',\n            secondary: '#D1E8FF'\n          },\n          meta: {\n            medicationIndex: index\n          }\n        };\n        this.medicationEvents.push(event);\n      });\n    });\n  }\n  onDayClicked({\n    day\n  }) {\n    if (isSameDay(this.viewDate, day.date)) {\n      this.activeDayIsOpen = !this.activeDayIsOpen;\n    } else {\n      this.viewDate = day.date;\n      this.activeDayIsOpen = true;\n    }\n  }\n  onEventClicked({\n    event\n  }) {\n    const medicationIndex = event.meta.medicationIndex;\n    const medication = this.medications[medicationIndex];\n    // Handle event click as needed, e.g., show medication details\n    console.log('Medication Clicked:', medication);\n  }\n  onEventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }) {\n    // Handle event time changes as needed\n    console.log('Event Times Changed:', event, newStart, newEnd);\n  }\n}\nCalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n  return new (t || CalendarComponent)();\n};\nCalendarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CalendarComponent,\n  selectors: [[\"app-calendar\"]],\n  decls: 5,\n  vars: 4,\n  consts: [[1, \"patient-info\"], [3, \"viewDate\", \"events\", \"activeDayIsOpen\", \"dayClicked\", \"eventClicked\"]],\n  template: function CalendarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"\\\\\\n\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"mwl-calendar-month-view\", 1);\n      i0.ɵɵlistener(\"dayClicked\", function CalendarComponent_Template_mwl_calendar_month_view_dayClicked_4_listener($event) {\n        return ctx.onDayClicked($event);\n      })(\"eventClicked\", function CalendarComponent_Template_mwl_calendar_month_view_eventClicked_4_listener($event) {\n        return ctx.onEventClicked($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.patientName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"viewDate\", ctx.viewDate)(\"events\", ctx.medicationEvents)(\"activeDayIsOpen\", ctx.activeDayIsOpen);\n    }\n  },\n  dependencies: [i1.CalendarMonthViewComponent],\n  styles: [\"[_nghost-%COMP%] {\\n    display: block;\\n    width: 100%;\\n    max-width: 800px;\\n    \\n    margin: auto;\\n}\\n\\n.mwl-calendar-month-view[_ngcontent-%COMP%] {\\n    width: 100%;\\n    \\n    max-width: 100%;\\n    \\n    height: 600px;\\n    \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FsZW5kYXIvY2FsZW5kYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLHVDQUF1QztJQUN2QyxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLDBEQUEwRDtJQUMxRCxlQUFlO0lBQ2YsNkRBQTZEO0lBQzdELGFBQWE7SUFDYixnQ0FBZ0M7QUFDcEMiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICAvKiBBZGp1c3QgdGhlIG1heGltdW0gd2lkdGggYXMgbmVlZGVkICovXG4gICAgbWFyZ2luOiBhdXRvO1xufVxuXG4ubXdsLWNhbGVuZGFyLW1vbnRoLXZpZXcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC8qIFNldCB0aGUgd2lkdGggdG8gMTAwJSB0byB0YWtlIHVwIHRoZSBlbnRpcmUgY29udGFpbmVyICovXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIC8qIEVuc3VyZSB0aGUgY2FsZW5kYXIgZG9lc24ndCBleGNlZWQgdGhlIGNvbnRhaW5lcidzIHdpZHRoICovXG4gICAgaGVpZ2h0OiA2MDBweDtcbiAgICAvKiBBZGp1c3QgdGhlIGhlaWdodCBhcyBuZWVkZWQgKi9cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAQA,SAASA,OAAO,EAAEC,UAAU,EAAEC,SAAS,QAAQ,UAAU;;;AAOzD,OAAM,MAAOC,iBAAiB;EAa5BC;IAZA,gBAAW,GAAW,UAAU;IAChC,aAAQ,GAAS,IAAIC,IAAI,EAAE,CAAC,CAAC;IAC7B,oBAAe,GAAY,IAAI;IAE/B,gBAAW,GAAU,CACnB;MAAEC,IAAI,EAAE,cAAc;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAC,CAAE,EAC1E;MAAEH,IAAI,EAAE,cAAc;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAC;IACzE;IAAA,CACD;;IAED,qBAAgB,GAAoB,EAAE;IAGpC,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoB;IAClB,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAE1B,IAAI,CAACC,WAAW,CAACC,OAAO,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAI;MAC7CD,UAAU,CAACL,IAAI,CAACI,OAAO,CAAEG,GAAG,IAAI;QAC9B,MAAMC,KAAK,GAAkB;UAC3BC,KAAK,EAAElB,OAAO,CAACC,UAAU,CAAC,IAAI,CAACkB,QAAQ,CAAC,EAAEH,GAAG,GAAG,CAAC,CAAC;UAClDI,KAAK,EAAE,GAAGN,UAAU,CAACR,IAAI,MAAMQ,UAAU,CAACP,MAAM,MAAMO,UAAU,CAACN,IAAI,EAAE;UACvEa,KAAK,EAAE;YAAEC,OAAO,EAAE,SAAS;YAAEC,SAAS,EAAE;UAAS,CAAE;UACnDC,IAAI,EAAE;YAAEC,eAAe,EAAEV;UAAK;SAC/B;QAED,IAAI,CAACJ,gBAAgB,CAACe,IAAI,CAACT,KAAK,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAU,YAAY,CAAC;IAAEX;EAAG,CAAiC;IACjD,IAAId,SAAS,CAAC,IAAI,CAACiB,QAAQ,EAAEH,GAAG,CAACY,IAAI,CAAC,EAAE;MACtC,IAAI,CAACC,eAAe,GAAG,CAAC,IAAI,CAACA,eAAe;KAC7C,MAAM;MACL,IAAI,CAACV,QAAQ,GAAGH,GAAG,CAACY,IAAI;MACxB,IAAI,CAACC,eAAe,GAAG,IAAI;;EAE/B;EAEAC,cAAc,CAAC;IAAEb;EAAK,CAA4B;IAChD,MAAMQ,eAAe,GAAGR,KAAK,CAACO,IAAI,CAACC,eAAe;IAClD,MAAMX,UAAU,GAAG,IAAI,CAACF,WAAW,CAACa,eAAe,CAAC;IACpD;IACAM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAElB,UAAU,CAAC;EAChD;EAEAmB,mBAAmB,CAAC;IAClBhB,KAAK;IACLiB,QAAQ;IACRC;EAAM,CACyB;IAC/B;IACAJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEf,KAAK,EAAEiB,QAAQ,EAAEC,MAAM,CAAC;EAC9D;;AAzDWhC,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCf9BC,oBACA;MAAAA,8BAA0B;MAClBA,YAAiB;MAAAA,iBAAK;MAI9BA,kDAA2L;MAAhHA;QAAA,OAAcC,wBAAoB;MAAA,EAAC;QAAA,OAAqDA,0BAAsB;MAAA,EAA3E;MAC9GD,iBAA0B;;;MALlBA,eAAiB;MAAjBA,qCAAiB;MAIAA,eAAqB;MAArBA,uCAAqB","names":["addDays","startOfDay","isSameDay","CalendarComponent","constructor","Date","name","dosage","time","days","updateCalendarEvents","medicationEvents","medications","forEach","medication","index","day","event","start","viewDate","title","color","primary","secondary","meta","medicationIndex","push","onDayClicked","date","activeDayIsOpen","onEventClicked","console","log","onEventTimesChanged","newStart","newEnd","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/calendar/calendar.component.ts","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/calendar/calendar.component.html"],"sourcesContent":["// medication-calendar.component.ts\n\nimport { Component } from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarMonthViewDay,\n  CalendarEventTimesChangedEvent,\n} from 'angular-calendar';\nimport { addDays, startOfDay, isSameDay } from 'date-fns';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css'],\n})\nexport class CalendarComponent {\n  patientName: string = 'John Doe';\n  viewDate: Date = new Date(); // Current date\n  activeDayIsOpen: boolean = true;\n\n  medications: any[] = [\n    { name: 'Medication 1', dosage: '10mg', time: '8:00 AM', days: [1, 3, 5] },\n    { name: 'Medication 2', dosage: '20mg', time: '12:00 PM', days: [2, 4, 6] },\n    // Add more medication data as needed\n  ];\n\n  medicationEvents: CalendarEvent[] = [];\n\n  constructor() {\n    this.updateCalendarEvents();\n  }\n\n  updateCalendarEvents(): void {\n    this.medicationEvents = [];\n\n    this.medications.forEach((medication, index) => {\n      medication.days.forEach((day) => {\n        const event: CalendarEvent = {\n          start: addDays(startOfDay(this.viewDate), day - 1),\n          title: `${medication.name} - ${medication.dosage} - ${medication.time}`,\n          color: { primary: '#1e90ff', secondary: '#D1E8FF' },\n          meta: { medicationIndex: index },\n        };\n\n        this.medicationEvents.push(event);\n      });\n    });\n  }\n\n  onDayClicked({ day }: { day: CalendarMonthViewDay }): void {\n    if (isSameDay(this.viewDate, day.date)) {\n      this.activeDayIsOpen = !this.activeDayIsOpen;\n    } else {\n      this.viewDate = day.date;\n      this.activeDayIsOpen = true;\n    }\n  }\n\n  onEventClicked({ event }: { event: CalendarEvent }): void {\n    const medicationIndex = event.meta.medicationIndex;\n    const medication = this.medications[medicationIndex];\n    // Handle event click as needed, e.g., show medication details\n    console.log('Medication Clicked:', medication);\n  }\n\n  onEventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    // Handle event time changes as needed\n    console.log('Event Times Changed:', event, newStart, newEnd);\n  }\n}\n","\\\n<div class=\"patient-info\">\n    <h2>{{ patientName }}</h2>\n    <!-- Additional patient details here -->\n</div>\n\n<mwl-calendar-month-view [viewDate]=\"viewDate\" [events]=\"medicationEvents\" (dayClicked)=\"onDayClicked($event)\" [activeDayIsOpen]=\"activeDayIsOpen\" (eventClicked)=\"onEventClicked($event)\">\n</mwl-calendar-month-view>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}