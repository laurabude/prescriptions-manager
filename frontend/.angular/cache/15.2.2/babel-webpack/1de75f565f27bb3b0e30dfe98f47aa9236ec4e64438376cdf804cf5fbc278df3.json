{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/doctor.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DoctorInterfaceComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", patient_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r1, \" \");\n  }\n}\nconst _c0 = function () {\n  return [1, 2, 3, 4, 5, 6, 7];\n};\nconst _c1 = function () {\n  return [2, 4, 6];\n};\nconst _c2 = function () {\n  return [3, 6];\n};\nexport class DoctorInterfaceComponent {\n  constructor(doctorService) {\n    this.doctorService = doctorService;\n    this.selectedPatient = ''; // Define selectedPatient property\n    this.medication = ''; // Define medication property\n    this.dosage = ''; // Define dosage property\n    this.time = '';\n    this.viewDate = new Date();\n    this.events = [];\n    this.selectedDates = [];\n    this.patients = [];\n    this.dayModifiers = [];\n  }\n  ngOnInit() {\n    this.getPatients();\n  }\n  getPatients() {\n    this.doctorService.getPatients().subscribe(data => {\n      this.patients = data;\n      console.log(this.patients);\n    }, error => {\n      console.error('Error fetching patients:', error);\n    });\n  }\n  setPrescription() {\n    var form = {\n      username: this.selectedPatient,\n      medication: this.medication,\n      dosage: this.dosage,\n      time: this.time,\n      days: this.days\n    };\n    this.doctorService.setPrescription(form).subscribe(data => {\n      console.log(data);\n    });\n  }\n  onDayClicked(day) {\n    const clickedDate = day.day.date;\n    // Toggle the selection status of the date\n    if (this.isSelectedDate(clickedDate)) {\n      this.selectedDates = this.selectedDates.filter(date => date.toDateString() !== clickedDate.toDateString());\n    } else {\n      this.selectedDates.push(clickedDate);\n    }\n  }\n  isSelectedDate(date) {\n    return this.selectedDates.some(selectedDate => selectedDate.toDateString() === date.toDateString());\n  }\n}\nDoctorInterfaceComponent.ɵfac = function DoctorInterfaceComponent_Factory(t) {\n  return new (t || DoctorInterfaceComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n};\nDoctorInterfaceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DoctorInterfaceComponent,\n  selectors: [[\"app-doctor-interface\"]],\n  decls: 32,\n  vars: 12,\n  consts: [[1, \"doctor-interface-container\"], [1, \"form-group\"], [\"for\", \"patientSelect\"], [\"id\", \"patientSelect\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"medication\"], [\"type\", \"text\", \"id\", \"medication\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dosage\"], [\"type\", \"text\", \"id\", \"dosage\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"time\"], [\"type\", \"time\", \"id\", \"time\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"days\"], [\"id\", \"days\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [1, \"btn-set-prescription\", 3, \"click\"]],\n  template: function DoctorInterfaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Doctor Interface\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Select Patient:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_select_ngModelChange_6_listener($event) {\n        return ctx.selectedPatient = $event;\n      });\n      i0.ɵɵtemplate(7, DoctorInterfaceComponent_option_7_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Medication:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.medication = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Dosage:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.dosage = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 1)(17, \"label\", 9);\n      i0.ɵɵtext(18, \"Time to take medication:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.time = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 11);\n      i0.ɵɵtext(22, \"Take every:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_select_ngModelChange_23_listener($event) {\n        return ctx.days = $event;\n      });\n      i0.ɵɵelementStart(24, \"option\", 13);\n      i0.ɵɵtext(25, \"day\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"option\", 13);\n      i0.ɵɵtext(27, \"other day\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"option\", 13);\n      i0.ɵɵtext(29, \"3 days\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function DoctorInterfaceComponent_Template_button_click_30_listener() {\n        return ctx.setPrescription();\n      });\n      i0.ɵɵtext(31, \"Set Prescription\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.medication);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.dosage);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.time);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.days);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(9, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(10, _c1));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(11, _c2));\n    }\n  },\n  dependencies: [i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf],\n  styles: [\".customCalendar[_ngcontent-%COMP%] {\\n    width: 300px;\\n    height: 300px\\n}\\n\\n.selected-date[_ngcontent-%COMP%] {\\n    background-color: #66BB6A;\\n    \\n    color: #FFFFFF;\\n    \\n}\\n\\n.doctor-interface-container[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: auto;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n}\\n\\n.btn-set-prescription[_ngcontent-%COMP%] {\\n    background-color: #4caf50;\\n    color: white;\\n    padding: 10px 15px;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n}\\n\\n.btn-set-prescription[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9yLWludGVyZmFjZS9kb2N0b3ItaW50ZXJmYWNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1o7QUFDSjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QiwyQ0FBMkM7SUFDM0MsY0FBYztJQUNkLHFDQUFxQztBQUN6Qzs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3RvbUNhbGVuZGFyIHtcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgaGVpZ2h0OiAzMDBweFxufVxuXG4uc2VsZWN0ZWQtZGF0ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY2QkI2QTtcbiAgICAvKiBZb3UgY2FuIGN1c3RvbWl6ZSB0aGUgYmFja2dyb3VuZCBjb2xvciAqL1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIC8qIFlvdSBjYW4gY3VzdG9taXplIHRoZSB0ZXh0IGNvbG9yICovXG59XG5cbi5kb2N0b3ItaW50ZXJmYWNlLWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtYXJnaW46IGF1dG87XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4uYnRuLXNldC1wcmVzY3JpcHRpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJ0bi1zZXQtcHJlc2NyaXB0aW9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DoctorInterfaceComponent","constructor","doctorService","Date","ngOnInit","getPatients","subscribe","data","patients","console","log","error","setPrescription","form","username","selectedPatient","medication","dosage","time","days","onDayClicked","day","clickedDate","date","isSelectedDate","selectedDates","filter","toDateString","push","some","selectedDate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-interface/doctor-interface.component.html","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-interface/doctor-interface.component.ts"],"sourcesContent":["<div class=\"doctor-interface-container\">\n    <h2>Doctor Interface</h2>\n\n    <div class=\"form-group\">\n        <label for=\"patientSelect\">Select Patient:</label>\n        <select id=\"patientSelect\" [(ngModel)]=\"selectedPatient\">\n            <option *ngFor=\"let patient of patients\" [value]=\"patient\">\n                {{ patient }}\n            </option>\n        </select>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"medication\">Medication:</label>\n        <input type=\"text\" id=\"medication\" [(ngModel)]=\"medication\" />\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"dosage\">Dosage:</label>\n        <input type=\"text\" id=\"dosage\" [(ngModel)]=\"dosage\" />\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"time\">Time to take medication:</label>\n        <input type=\"time\" id=\"time\" [(ngModel)]=\"time\" />\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"days\">Take every:</label>\n        <select id=\"days\" [(ngModel)]=\"days\">\n            <option [value]=\"[1, 2, 3, 4, 5, 6, 7]\">day</option>\n            <option [value]=\"[2, 4, 6]\">other day</option>\n            <option [value]=\"[3, 6]\">3 days</option>\n        </select>\n    </div>\n\n    <button class=\"btn-set-prescription\" (click)=\"setPrescription()\">Set Prescription</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CalendarEvent, MonthViewDay } from 'calendar-utils';\nimport { DoctorService } from '../_services/doctor.service';\n\n@Component({\n  selector: 'app-doctor-interface',\n  templateUrl: './doctor-interface.component.html',\n  styleUrls: ['./doctor-interface.component.css']\n})\nexport class DoctorInterfaceComponent implements OnInit {\n\n  selectedPatient: string = ''; // Define selectedPatient property\n  medication: string = ''; // Define medication property\n  dosage: string = ''; // Define dosage property\n  time:string='';\n  days:number;\n  viewDate: Date = new Date();\n  events: CalendarEvent[] = [];\n  selectedDates: Date[] = [];\n  patients: any[] = [];\n  dayModifiers: any[] = [];\n\n  constructor(private doctorService: DoctorService) { }\n\n  ngOnInit(): void {\n    this.getPatients();\n  }\n\n  getPatients() {\n    this.doctorService.getPatients().subscribe(\n      (data: any) => {\n        this.patients = data;\n        console.log(this.patients);\n      },\n      (error) => {\n        console.error('Error fetching patients:', error);\n      }\n    );\n  }\n  \n  \n\n  setPrescription() {\n\n    var form = {\n      username : this.selectedPatient,\n      medication: this.medication,\n      dosage: this.dosage,\n      time: this.time,\n      days: this.days\n    }\n    this.doctorService.setPrescription(form).subscribe(\n      (data:any) => {\n        console.log(data);\n      }\n    )\n  }\n  onDayClicked(day: { day: MonthViewDay<any>; sourceEvent: MouseEvent | KeyboardEvent }): void {\n    const clickedDate = day.day.date;\n\n    // Toggle the selection status of the date\n    if (this.isSelectedDate(clickedDate)) {\n      this.selectedDates = this.selectedDates.filter(date => date.toDateString() !== clickedDate.toDateString());\n    } else {\n      this.selectedDates.push(clickedDate);\n    }\n  }\n  \n  isSelectedDate(date: Date): boolean {\n    return this.selectedDates.some(selectedDate => selectedDate.toDateString() === date.toDateString());\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}