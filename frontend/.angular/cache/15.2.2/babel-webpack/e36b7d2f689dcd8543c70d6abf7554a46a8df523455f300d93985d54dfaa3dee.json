{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"angular-calendar\";\nexport class CalendarComponent {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n    this.prescriptions = [];\n  }\n  ngOnInit() {\n    // Get the username from the route parameters\n    this.route.params.subscribe(params => {\n      const username = params['username'];\n      // Fetch prescription data for the specified username\n      this.http.get(`http://localhost:3000/api/prescriptions/${username}`).subscribe(response => {\n        this.prescriptions = response.prescriptions;\n        // Handle success\n      }, error => {\n        console.error(error);\n        // Handle error\n      });\n    });\n  }\n}\n\nCalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n  return new (t || CalendarComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nCalendarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CalendarComponent,\n  selectors: [[\"app-calendar\"]],\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"viewDate\", \"events\", \"activeDayIsOpen\", \"dayClicked\", \"eventClicked\"]],\n  template: function CalendarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mwl-calendar-month-view\", 0);\n      i0.ɵɵlistener(\"dayClicked\", function CalendarComponent_Template_mwl_calendar_month_view_dayClicked_0_listener($event) {\n        return ctx.onDayClicked($event);\n      })(\"eventClicked\", function CalendarComponent_Template_mwl_calendar_month_view_eventClicked_0_listener($event) {\n        return ctx.onEventClicked($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"viewDate\", ctx.viewDate)(\"events\", ctx.medicationEvents)(\"activeDayIsOpen\", ctx.activeDayIsOpen);\n    }\n  },\n  dependencies: [i3.CalendarMonthViewComponent],\n  styles: [\"[_nghost-%COMP%] {\\n    display: block;\\n    width: 100%;\\n    max-width: 800px;\\n    \\n    margin: auto;\\n}\\n\\n.mwl-calendar-month-view[_ngcontent-%COMP%] {\\n    width: 100%;\\n    \\n    max-width: 100%;\\n    \\n    height: 600px;\\n    \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FsZW5kYXIvY2FsZW5kYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLHVDQUF1QztJQUN2QyxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLDBEQUEwRDtJQUMxRCxlQUFlO0lBQ2YsNkRBQTZEO0lBQzdELGFBQWE7SUFDYixnQ0FBZ0M7QUFDcEMiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICAvKiBBZGp1c3QgdGhlIG1heGltdW0gd2lkdGggYXMgbmVlZGVkICovXG4gICAgbWFyZ2luOiBhdXRvO1xufVxuXG4ubXdsLWNhbGVuZGFyLW1vbnRoLXZpZXcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC8qIFNldCB0aGUgd2lkdGggdG8gMTAwJSB0byB0YWtlIHVwIHRoZSBlbnRpcmUgY29udGFpbmVyICovXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIC8qIEVuc3VyZSB0aGUgY2FsZW5kYXIgZG9lc24ndCBleGNlZWQgdGhlIGNvbnRhaW5lcidzIHdpZHRoICovXG4gICAgaGVpZ2h0OiA2MDBweDtcbiAgICAvKiBBZGp1c3QgdGhlIGhlaWdodCBhcyBuZWVkZWQgKi9cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,KAAqB,EAAUC,IAAgB;IAA/C,UAAK,GAALD,KAAK;IAA0B,SAAI,GAAJC,IAAI;IAFvD,kBAAa,GAAU,EAAE;EAE6C;EAEtEC,QAAQ;IACN;IACA,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,MAAME,QAAQ,GAAGF,MAAM,CAAC,UAAU,CAAC;MACnC;MACA,IAAI,CAACF,IAAI,CAACK,GAAG,CAAC,2CAA2CD,QAAQ,EAAE,CAAC,CACjED,SAAS,CAAEG,QAAa,IAAI;QAC3B,IAAI,CAACC,aAAa,GAAGD,QAAQ,CAACC,aAAa;QAC3C;MACF,CAAC,EAAGC,KAAK,IAAI;QACXC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB;MACF,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;;;AAnBWX,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,kDAA2L;MAAhHA;QAAA,OAAcC,wBAAoB;MAAA,EAAC;QAAA,OAAqDA,0BAAsB;MAAA,EAA3E;MAC9GD,iBAA0B;;;MADDA,uCAAqB","names":["CalendarComponent","constructor","route","http","ngOnInit","params","subscribe","username","get","response","prescriptions","error","console","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/calendar/calendar.component.ts","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/calendar/calendar.component.html"],"sourcesContent":["// calendar.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css'],\n})\nexport class CalendarComponent implements OnInit {\n  prescriptions: any[] = [];\n\n  constructor(private route: ActivatedRoute, private http: HttpClient) {}\n\n  ngOnInit() {\n    // Get the username from the route parameters\n    this.route.params.subscribe((params) => {\n      const username = params['username'];\n      // Fetch prescription data for the specified username\n      this.http.get(`http://localhost:3000/api/prescriptions/${username}`)\n        .subscribe((response: any) => {\n          this.prescriptions = response.prescriptions;\n          // Handle success\n        }, (error) => {\n          console.error(error);\n          // Handle error\n        });\n    });\n  }\n}\n","<mwl-calendar-month-view [viewDate]=\"viewDate\" [events]=\"medicationEvents\" (dayClicked)=\"onDayClicked($event)\" [activeDayIsOpen]=\"activeDayIsOpen\" (eventClicked)=\"onEventClicked($event)\">\n</mwl-calendar-month-view>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}