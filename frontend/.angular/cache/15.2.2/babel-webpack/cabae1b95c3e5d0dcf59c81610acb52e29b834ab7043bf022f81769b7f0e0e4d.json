{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { navbarData } from './nav-data';\nlet SidebarComponent = class SidebarComponent {\n  constructor(storageService, router) {\n    this.storageService = storageService;\n    this.router = router;\n    this.onToggleSideNav = new EventEmitter();\n    this.username = '';\n    this.userPic = '';\n    this.isLoggedIn = false;\n    this.collapsed = false;\n    this.screenWidth = 0;\n    this.navData = navbarData;\n  }\n  onResize(event) {\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth <= 768) {\n      this.collapsed = false;\n      this.onToggleSideNav.emit({\n        collapsed: this.collapsed,\n        screenWidth: this.screenWidth\n      });\n    }\n  }\n  ngOnInit() {\n    this.screenWidth = window.innerWidth;\n    console.log(this.username);\n  }\n  toggleCollapse() {\n    this.collapsed = !this.collapsed;\n    this.onToggleSideNav.emit({\n      collapsed: this.collapsed,\n      screenWidth: this.screenWidth\n    });\n  }\n  closeSidenav() {\n    this.collapsed = false;\n    this.onToggleSideNav.emit({\n      collapsed: this.collapsed,\n      screenWidth: this.screenWidth\n    });\n  }\n  signOut() {\n    this.storageService.clean();\n    this.isLoggedIn = false;\n    this.router.navigate(['login']);\n  }\n};\n__decorate([Output()], SidebarComponent.prototype, \"onToggleSideNav\", void 0);\n__decorate([Input()], SidebarComponent.prototype, \"username\", void 0);\n__decorate([Input()], SidebarComponent.prototype, \"userPic\", void 0);\n__decorate([Input()], SidebarComponent.prototype, \"isLoggedIn\", void 0);\n__decorate([HostListener('window:resize', ['$event'])], SidebarComponent.prototype, \"onResize\", null);\nSidebarComponent = __decorate([Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n  animations: [trigger('fadeInOut', [transition(':enter', [style({\n    opacity: 0\n  }), animate('350ms', style({\n    opacity: 1\n  }))]), transition(':leave', [style({\n    opacity: 1\n  }), animate('350ms', style({\n    opacity: 0\n  }))])]), trigger('rotate', [transition(':enter', [animate('1000ms', keyframes([style({\n    transform: 'rotate(0deg)',\n    offset: '0'\n  }), style({\n    transform: 'rotate(2turn)',\n    offset: '1'\n  })]))])])]\n})], SidebarComponent);\nexport { SidebarComponent };","map":{"version":3,"mappings":"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","names":["animate","keyframes","style","transition","trigger","Component","EventEmitter","HostListener","Input","Output","navbarData","SidebarComponent","constructor","storageService","router","onResize","event","screenWidth","window","innerWidth","collapsed","onToggleSideNav","emit","ngOnInit","console","log","username","toggleCollapse","closeSidenav","signOut","clean","isLoggedIn","navigate","__decorate","selector","templateUrl","styleUrls","animations","opacity","transform","offset"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/navbar/navbar.component.ts"],"sourcesContent":["import {\r\n  animate,\r\n  keyframes,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from '../_services/storage.service';\r\nimport { navbarData } from './nav-data';\r\n\r\ninterface SideNavToggle {\r\n  screenWidth: number;\r\n  collapsed: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css'],\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('350ms', style({ opacity: 1 })),\r\n      ]),\r\n      transition(':leave', [\r\n        style({ opacity: 1 }),\r\n        animate('350ms', style({ opacity: 0 })),\r\n      ]),\r\n    ]),\r\n    trigger('rotate', [\r\n      transition(':enter', [\r\n        animate(\r\n          '1000ms',\r\n          keyframes([\r\n            style({ transform: 'rotate(0deg)', offset: '0' }),\r\n            style({ transform: 'rotate(2turn)', offset: '1' }),\r\n          ])\r\n        ),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  @Output() onToggleSideNav: EventEmitter<SideNavToggle> = new EventEmitter();\r\n  @Input() username = '';\r\n  @Input() userPic = '';\r\n  @Input() isLoggedIn = false;\r\n  collapsed = false;\r\n  screenWidth = 0;\r\n  navData = navbarData;\r\n  constructor(private storageService: StorageService, private router: Router) {}\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event: any) {\r\n    this.screenWidth = window.innerWidth;\r\n    if (this.screenWidth <= 768) {\r\n      this.collapsed = false;\r\n      this.onToggleSideNav.emit({\r\n        collapsed: this.collapsed,\r\n        screenWidth: this.screenWidth,\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.screenWidth = window.innerWidth;\r\n    console.log(this.username);\r\n  }\r\n\r\n  toggleCollapse(): void {\r\n    this.collapsed = !this.collapsed;\r\n    this.onToggleSideNav.emit({\r\n      collapsed: this.collapsed,\r\n      screenWidth: this.screenWidth,\r\n    });\r\n  }\r\n\r\n  closeSidenav(): void {\r\n    this.collapsed = false;\r\n    this.onToggleSideNav.emit({\r\n      collapsed: this.collapsed,\r\n      screenWidth: this.screenWidth,\r\n    });\r\n  }\r\n  signOut() {\r\n    this.storageService.clean();\r\n    this.isLoggedIn = false;\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}