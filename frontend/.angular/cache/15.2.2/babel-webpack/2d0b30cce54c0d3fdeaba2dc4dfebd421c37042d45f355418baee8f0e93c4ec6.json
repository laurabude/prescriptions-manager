{"ast":null,"code":"// doctor-patients-list.component.ts\nimport { __decorate } from \"tslib\";\n// ... (other imports)\nimport { ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nlet DoctorPatientsListComponent = class DoctorPatientsListComponent {\n  constructor(doctorService) {\n    this.doctorService = doctorService;\n    this.displayedColumns = ['fullName', 'age', 'sex', 'height', 'weight', 'allergies'];\n    this.patients = [];\n    // Initialize the data source\n    this.dataSource = new MatTableDataSource(this.patients);\n  }\n  ngOnInit() {\n    this.getPatients();\n  }\n  ngAfterViewInit() {\n    // Set up the paginator after the view is initialized\n    this.dataSource.paginator = this.paginator;\n  }\n  getPatients() {\n    this.doctorService.getPatients().subscribe(data => {\n      this.patients = data;\n      // Update the data source after fetching data\n      this.dataSource.data = this.patients;\n      console.log(this.patients);\n    }, error => {\n      console.error('Error fetching patients:', error);\n    });\n  }\n};\n__decorate([ViewChild(MatPaginator)], DoctorPatientsListComponent.prototype, \"paginator\", void 0);\nDoctorPatientsListComponent = __decorate([Component({\n  selector: 'app-doctor-patients-list',\n  templateUrl: './doctor-patients-list.component.html',\n  styleUrls: ['./doctor-patients-list.component.css']\n})], DoctorPatientsListComponent);\nexport { DoctorPatientsListComponent };","map":{"version":3,"mappings":"AAAA;;AAEA;AAEA,SAAwBA,SAAS,QAAQ,eAAe;AACxD,SAASC,YAAY,QAAQ,6BAA6B;AAOnD,IAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EAQtCC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IANjC,qBAAgB,GAAa,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC;IACxF,aAAQ,GAAU,EAAE;IAMlB;IACA,IAAI,CAACC,UAAU,GAAG,IAAIC,kBAAkB,CAAM,IAAI,CAACC,QAAQ,CAAC;EAC9D;EAEAC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,eAAe;IACb;IACA,IAAI,CAACL,UAAU,CAACM,SAAS,GAAG,IAAI,CAACA,SAAS;EAC5C;EAEAF,WAAW;IACT,IAAI,CAACL,aAAa,CAACK,WAAW,EAAE,CAACG,SAAS,CACvCC,IAAS,IAAI;MACZ,IAAI,CAACN,QAAQ,GAAGM,IAAI;MACpB;MACA,IAAI,CAACR,UAAU,CAACQ,IAAI,GAAG,IAAI,CAACN,QAAQ;MACpCO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,QAAQ,CAAC;IAC5B,CAAC,EACAS,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CACF;EACH;CACD;AA7B0BC,YAAxBjB,SAAS,CAACC,YAAY,CAAC,8DAAyB;AANtCC,2BAA2B,eALvCgB,SAAS,CAAC;EACTC,QAAQ,EAAE,0BAA0B;EACpCC,WAAW,EAAE,uCAAuC;EACpDC,SAAS,EAAE,CAAC,sCAAsC;CACnD,CAAC,GACWnB,2BAA2B,CAmCvC;SAnCYA,2BAA2B","names":["ViewChild","MatPaginator","DoctorPatientsListComponent","constructor","doctorService","dataSource","MatTableDataSource","patients","ngOnInit","getPatients","ngAfterViewInit","paginator","subscribe","data","console","log","error","__decorate","Component","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-patients-list/doctor-patients-list.component.ts"],"sourcesContent":["// doctor-patients-list.component.ts\n\n// ... (other imports)\n\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-doctor-patients-list',\n  templateUrl: './doctor-patients-list.component.html',\n  styleUrls: ['./doctor-patients-list.component.css']\n})\nexport class DoctorPatientsListComponent implements OnInit, AfterViewInit {\n\n  displayedColumns: string[] = ['fullName', 'age', 'sex', 'height', 'weight', 'allergies'];\n  patients: any[] = [];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private doctorService: DoctorService) {\n    // Initialize the data source\n    this.dataSource = new MatTableDataSource<any>(this.patients);\n  }\n\n  ngOnInit(): void {\n    this.getPatients();\n  }\n\n  ngAfterViewInit(): void {\n    // Set up the paginator after the view is initialized\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getPatients() {\n    this.doctorService.getPatients().subscribe(\n      (data: any) => {\n        this.patients = data;\n        // Update the data source after fetching data\n        this.dataSource.data = this.patients;\n        console.log(this.patients);\n      },\n      (error) => {\n        console.error('Error fetching patients:', error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}