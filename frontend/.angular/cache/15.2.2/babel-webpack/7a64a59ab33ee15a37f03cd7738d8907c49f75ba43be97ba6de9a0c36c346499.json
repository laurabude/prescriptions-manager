{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n  register(username, email, password, pic) {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password,\n      pic\n    }, httpOptions);\n  }\n  logout() {\n    return this.http.post(AUTH_API + 'signout', {}, httpOptions);\n  }\n  changepicture(username, pic) {\n    return this.http.put(AUTH_API + 'changepicture', {\n      username,\n      pic\n    }, httpOptions);\n  }\n  updateusername(username, email, password) {\n    console.log(email);\n    return this.http.put(AUTH_API + 'updateusername', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n  updatepassword(username, oldPass, password) {\n    return this.http.put(AUTH_API + 'updatepassword', {\n      username,\n      oldPass,\n      password\n    }, httpOptions);\n  }\n  deleteuser(username, password) {\n    return this.http.post(AUTH_API + 'deleteuser', {\n      username,\n      password\n    }, httpOptions);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAAMC,QAAQ,GAAG,iCAAiC;AAElD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKD,OAAM,MAAOI,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CACnBT,QAAQ,GAAG,QAAQ,EACnB;MACEO,QAAQ;MACRC;KACD,EACDP,WAAW,CACZ;EACH;EAEAS,QAAQ,CACNH,QAAgB,EAChBI,KAAa,EACbH,QAAgB,EAChBI,GAAW;IAEX,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CACnBT,QAAQ,GAAG,QAAQ,EACnB;MACEO,QAAQ;MACRI,KAAK;MACLH,QAAQ;MACRI;KACD,EACDX,WAAW,CACZ;EACH;EAEAY,MAAM;IACJ,OAAO,IAAI,CAACR,IAAI,CAACI,IAAI,CAACT,QAAQ,GAAG,SAAS,EAAE,EAAE,EAAEC,WAAW,CAAC;EAC9D;EAEAa,aAAa,CAACP,QAAgB,EAAEK,GAAW;IACzC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAClBf,QAAQ,GAAG,eAAe,EAC1B;MAAEO,QAAQ;MAAEK;IAAG,CAAE,EACjBX,WAAW,CACZ;EACH;EAEAe,cAAc,CAACT,QAAgB,EAAEI,KAAa,EAAEH,QAAgB;IAC9DS,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;IAClB,OAAO,IAAI,CAACN,IAAI,CAACU,GAAG,CAClBf,QAAQ,GAAG,gBAAgB,EAC3B;MAAEO,QAAQ;MAAEI,KAAK;MAAEH;IAAQ,CAAE,EAC7BP,WAAW,CACZ;EACH;EAEAkB,cAAc,CAACZ,QAAgB,EAAEa,OAAe,EAAEZ,QAAgB;IAChE,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAClBf,QAAQ,GAAG,gBAAgB,EAC3B;MAAEO,QAAQ;MAAEa,OAAO;MAAEZ;IAAQ,CAAE,EAC/BP,WAAW,CACZ;EACH;EAEAoB,UAAU,CAACd,QAAgB,EAAEC,QAAgB;IAC3C,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CACnBT,QAAQ,GAAG,YAAY,EACvB;MAAEO,QAAQ;MAAEC;IAAQ,CAAE,EACtBP,WAAW,CACZ;EACH;;AAnEWE,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["HttpHeaders","AUTH_API","httpOptions","headers","AuthService","constructor","http","login","username","password","post","register","email","pic","logout","changepicture","put","updateusername","console","log","updatepassword","oldPass","deleteuser","factory","providedIn"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/_services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(\r\n      AUTH_API + 'signin',\r\n      {\r\n        username,\r\n        password,\r\n      },\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  register(\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    pic: string\r\n  ): Observable<any> {\r\n    return this.http.post(\r\n      AUTH_API + 'signup',\r\n      {\r\n        username,\r\n        email,\r\n        password,\r\n        pic,\r\n      },\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signout', {}, httpOptions);\r\n  }\r\n\r\n  changepicture(username: string, pic: string): Observable<any> {\r\n    return this.http.put(\r\n      AUTH_API + 'changepicture',\r\n      { username, pic },\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updateusername(username: string, email: string, password: string) {\r\n    console.log(email);\r\n    return this.http.put(\r\n      AUTH_API + 'updateusername',\r\n      { username, email, password },\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  updatepassword(username: string, oldPass: string, password: string) {\r\n    return this.http.put(\r\n      AUTH_API + 'updatepassword',\r\n      { username, oldPass, password },\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  deleteuser(username: string, password: string): Observable<any> {\r\n    return this.http.post(\r\n      AUTH_API + 'deleteuser',\r\n      { username, password },\r\n      httpOptions\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}