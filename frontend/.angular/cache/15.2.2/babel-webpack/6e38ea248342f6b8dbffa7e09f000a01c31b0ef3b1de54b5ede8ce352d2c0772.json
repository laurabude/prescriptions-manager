{"ast":null,"code":"import * as i0 from \"@angular/core\";\nfunction DoctorPatientsListComponent_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Full Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r14.name, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Age \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r15.age, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Sex \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r16.sex, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Height (cm) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r17.height, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Weight (kg) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r18.weight, \" \");\n  }\n}\nfunction DoctorPatientsListComponent_th_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Allergies \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DoctorPatientsListComponent_td_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r19.allergies || \"N/A\", \" \");\n  }\n}\nfunction DoctorPatientsListComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\nfunction DoctorPatientsListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\nexport class DoctorPatientsListComponent {\n  constructor() {\n    this.displayedColumns = ['fullName', 'age', 'sex', 'height', 'weight', 'allergies'];\n    this.patients = [];\n  }\n  //constructor(private patientService: PatientService) { }\n  ngOnInit() {\n    this.getPatients();\n  }\n  getPatients() {\n    // Fetch patient data from the service\n    //  this.patients = this.patientService.getAllPatients();\n  }\n}\nDoctorPatientsListComponent.ɵfac = function DoctorPatientsListComponent_Factory(t) {\n  return new (t || DoctorPatientsListComponent)();\n};\nDoctorPatientsListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DoctorPatientsListComponent,\n  selectors: [[\"app-doctor-patients-list\"]],\n  decls: 24,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"list-heading\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"fullName\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"age\"], [\"matColumnDef\", \"sex\"], [\"matColumnDef\", \"height\"], [\"matColumnDef\", \"weight\"], [\"matColumnDef\", \"allergies\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function DoctorPatientsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Patient Information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 2);\n      i0.ɵɵelementContainerStart(4, 3);\n      i0.ɵɵtemplate(5, DoctorPatientsListComponent_th_5_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(6, DoctorPatientsListComponent_td_6_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(7, 6);\n      i0.ɵɵtemplate(8, DoctorPatientsListComponent_th_8_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(9, DoctorPatientsListComponent_td_9_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(10, 7);\n      i0.ɵɵtemplate(11, DoctorPatientsListComponent_th_11_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(12, DoctorPatientsListComponent_td_12_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(13, 8);\n      i0.ɵɵtemplate(14, DoctorPatientsListComponent_th_14_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(15, DoctorPatientsListComponent_td_15_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(16, 9);\n      i0.ɵɵtemplate(17, DoctorPatientsListComponent_th_17_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(18, DoctorPatientsListComponent_td_18_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(19, 10);\n      i0.ɵɵtemplate(20, DoctorPatientsListComponent_th_20_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(21, DoctorPatientsListComponent_td_21_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(22, DoctorPatientsListComponent_tr_22_Template, 1, 0, \"tr\", 11);\n      i0.ɵɵtemplate(23, DoctorPatientsListComponent_tr_23_Template, 1, 0, \"tr\", 12);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"dataSource\", ctx.patients);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  styles: [\".container[_ngcontent-%COMP%] {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    padding: 20px;\\n}\\n\\n.list-heading[_ngcontent-%COMP%] {\\n    color: #007bff;\\n    text-align: center;\\n}\\n\\n.mat-elevation-z8[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9yLXBhdGllbnRzLWxpc3QvZG9jdG9yLXBhdGllbnRzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5saXN0LWhlYWRpbmcge1xuICAgIGNvbG9yOiAjMDA3YmZmO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLm1hdC1lbGV2YXRpb24tejgge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;IAMYA,8BAAsC;IAACA,2BAAU;IAAAA,iBAAK;;;;;IACtDA,8BAAuC;IAACA,YAAiB;IAAAA,iBAAK;;;;IAAtBA,eAAiB;IAAjBA,iDAAiB;;;;;IAKzDA,8BAAsC;IAACA,qBAAI;IAAAA,iBAAK;;;;;IAChDA,8BAAuC;IAACA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,gDAAgB;;;;;IAKxDA,8BAAsC;IAACA,qBAAI;IAAAA,iBAAK;;;;;IAChDA,8BAAuC;IAACA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,gDAAgB;;;;;IAKxDA,8BAAsC;IAACA,6BAAY;IAAAA,iBAAK;;;;;IACxDA,8BAAuC;IAACA,YAAmB;IAAAA,iBAAK;;;;IAAxBA,eAAmB;IAAnBA,mDAAmB;;;;;IAK3DA,8BAAsC;IAACA,6BAAY;IAAAA,iBAAK;;;;;IACxDA,8BAAuC;IAACA,YAAmB;IAAAA,iBAAK;;;;IAAxBA,eAAmB;IAAnBA,mDAAmB;;;;;IAK3DA,8BAAsC;IAACA,2BAAU;IAAAA,iBAAK;;;;;IACtDA,8BAAuC;IAACA,YAA+B;IAAAA,iBAAK;;;;IAApCA,eAA+B;IAA/BA,+DAA+B;;;;;IAK3EA,yBAA4D;;;;;IAC5DA,yBAAkE;;;ACnC1E,OAAM,MAAOC,2BAA2B;EAKrCC;IAHD,qBAAgB,GAAa,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC;IACxF,aAAQ,GAAU,EAAE;EAEH;EACjB;EAEAC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT;IACF;EAAA;;AAdWH,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRxCT,8BAAuB;MACMA,mCAAmB;MAAAA,iBAAK;MACjDA,gCAAkE;MAG9DA,gCAAsC;MAClCA,0EAAsD;MACtDA,0EAA8D;MAClEA,0BAAe;MAGfA,gCAAiC;MAC7BA,0EAAgD;MAChDA,0EAA6D;MACjEA,0BAAe;MAGfA,iCAAiC;MAC7BA,4EAAgD;MAChDA,4EAA6D;MACjEA,0BAAe;MAGfA,iCAAoC;MAChCA,4EAAwD;MACxDA,4EAAgE;MACpEA,0BAAe;MAGfA,iCAAoC;MAChCA,4EAAwD;MACxDA,4EAAgE;MACpEA,0BAAe;MAGfA,kCAAuC;MACnCA,4EAAsD;MACtDA,4EAA4E;MAChFA,0BAAe;MAIfA,6EAA4D;MAC5DA,6EAAkE;MACtEA,iBAAQ;;;MA1CSA,eAAuB;MAAvBA,yCAAuB;MAwChBA,gBAAiC;MAAjCA,sDAAiC;MACpBA,eAA0B;MAA1BA,uDAA0B","names":["i0","DoctorPatientsListComponent","constructor","ngOnInit","getPatients","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-patients-list/doctor-patients-list.component.html","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-patients-list/doctor-patients-list.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h2 class=\"list-heading\">Patient Information</h2>\n    <table mat-table [dataSource]=\"patients\" class=\"mat-elevation-z8\">\n\n        <!-- Full Name Column -->\n        <ng-container matColumnDef=\"fullName\">\n            <th mat-header-cell *matHeaderCellDef> Full Name </th>\n            <td mat-cell *matCellDef=\"let patient\"> {{patient.name}} </td>\n        </ng-container>\n\n        <!-- Age Column -->\n        <ng-container matColumnDef=\"age\">\n            <th mat-header-cell *matHeaderCellDef> Age </th>\n            <td mat-cell *matCellDef=\"let patient\"> {{patient.age}} </td>\n        </ng-container>\n\n        <!-- Sex Column -->\n        <ng-container matColumnDef=\"sex\">\n            <th mat-header-cell *matHeaderCellDef> Sex </th>\n            <td mat-cell *matCellDef=\"let patient\"> {{patient.sex}} </td>\n        </ng-container>\n\n        <!-- Height Column -->\n        <ng-container matColumnDef=\"height\">\n            <th mat-header-cell *matHeaderCellDef> Height (cm) </th>\n            <td mat-cell *matCellDef=\"let patient\"> {{patient.height}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"weight\">\n            <th mat-header-cell *matHeaderCellDef> Weight (kg) </th>\n            <td mat-cell *matCellDef=\"let patient\"> {{patient.weight}} </td>\n        </ng-container>\n\n        <!-- Allergies Column -->\n        <ng-container matColumnDef=\"allergies\">\n            <th mat-header-cell *matHeaderCellDef> Allergies </th>\n            <td mat-cell *matCellDef=\"let patient\"> {{patient.allergies || 'N/A'}} </td>\n        </ng-container>\n\n        <!-- Add more columns as needed -->\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-doctor-patients-list',\n  templateUrl: './doctor-patients-list.component.html',\n  styleUrls: ['./doctor-patients-list.component.css']\n})\nexport class DoctorPatientsListComponent implements OnInit {\n\n  displayedColumns: string[] = ['fullName', 'age', 'sex', 'height', 'weight', 'allergies'];\n  patients: any[] = [];\n\n   constructor() { }\n  //constructor(private patientService: PatientService) { }\n\n  ngOnInit(): void {\n    this.getPatients();\n  }\n\n  getPatients() {\n    // Fetch patient data from the service\n  //  this.patients = this.patientService.getAllPatients();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}