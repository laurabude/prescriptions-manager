{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CalendarService {\n  constructor() {\n    // Mock events data\n    this.events = [{\n      title: 'Event 1',\n      start: new Date(),\n      end: new Date(),\n      color: {\n        primary: '#1e90ff',\n        secondary: '#D1E8FF'\n      }\n    }\n    // Add more events as needed\n    ];\n  }\n\n  getEvents() {\n    // Simulate an asynchronous operation (e.g., fetching events from the server)\n    return of(this.events);\n  }\n}\nCalendarService.ɵfac = function CalendarService_Factory(t) {\n  return new (t || CalendarService)();\n};\nCalendarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CalendarService,\n  factory: CalendarService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;;AAMrC,OAAM,MAAOC,eAAe;EAY1BC;IAXA;IACQ,WAAM,GAAoB,CAChC;MACEC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE,IAAIC,IAAI,EAAE;MACjBC,GAAG,EAAE,IAAID,IAAI,EAAE;MACfE,KAAK,EAAE;QAAEC,OAAO,EAAE,SAAS;QAAEC,SAAS,EAAE;MAAS;;IAEnD;IAAA,CACD;EAEe;;EAEhBC,SAAS;IACP;IACA,OAAOV,EAAE,CAAC,IAAI,CAACW,MAAM,CAAC;EACxB;;AAjBWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAW,SAAfX,eAAe;EAAAY,YAFd;AAAM","names":["of","CalendarService","constructor","title","start","Date","end","color","primary","secondary","getEvents","events","factory","providedIn"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/_services/calendar.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { CalendarEvent } from 'angular-calendar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarService {\n  // Mock events data\n  private events: CalendarEvent[] = [\n    {\n      title: 'Event 1',\n      start: new Date(),\n      end: new Date(),\n      color: { primary: '#1e90ff', secondary: '#D1E8FF' },\n    },\n    // Add more events as needed\n  ];\n\n  constructor() { }\n\n  getEvents(): Observable<CalendarEvent[]> {\n    // Simulate an asynchronous operation (e.g., fetching events from the server)\n    return of(this.events);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}