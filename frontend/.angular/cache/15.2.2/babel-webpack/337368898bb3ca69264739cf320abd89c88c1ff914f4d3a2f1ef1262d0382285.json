{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/doctor.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DoctorInterfaceComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", patient_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r1, \" \");\n  }\n}\nconst _c0 = function () {\n  return [1, 2, 3, 4, 5, 6, 7];\n};\nconst _c1 = function () {\n  return [2, 4, 6];\n};\nconst _c2 = function () {\n  return [3, 6];\n};\nexport class DoctorInterfaceComponent {\n  constructor(doctorService) {\n    this.doctorService = doctorService;\n    this.selectedPatient = ''; // Define selectedPatient property\n    this.medication = ''; // Define medication property\n    this.dosage = ''; // Define dosage property\n    this.time = '';\n    this.viewDate = new Date();\n    this.events = [];\n    this.selectedDates = [];\n    this.patients = [];\n    this.dayModifiers = [];\n  }\n  ngOnInit() {\n    this.getPatients();\n  }\n  getPatients() {\n    this.doctorService.getPatients().subscribe(data => {\n      this.patients = data;\n      console.log(this.patients);\n    }, error => {\n      console.error('Error fetching patients:', error);\n    });\n  }\n  setPrescription() {\n    var sum = 1;\n    var toTake = [];\n    while (sum <= 12) {\n      toTake.push(sum);\n      console.log(sum);\n      sum = sum + this.days;\n    }\n    sum = 1;\n    var form = {\n      username: this.selectedPatient,\n      medication: this.medication,\n      dosage: this.dosage,\n      time: this.time,\n      days: toTake\n    };\n    this.doctorService.setPrescription(form).subscribe(data => {\n      console.log(data);\n    });\n  }\n  onDayClicked(day) {\n    const clickedDate = day.day.date;\n    // Toggle the selection status of the date\n    if (this.isSelectedDate(clickedDate)) {\n      this.selectedDates = this.selectedDates.filter(date => date.toDateString() !== clickedDate.toDateString());\n    } else {\n      this.selectedDates.push(clickedDate);\n    }\n  }\n  isSelectedDate(date) {\n    return this.selectedDates.some(selectedDate => selectedDate.toDateString() === date.toDateString());\n  }\n}\nDoctorInterfaceComponent.ɵfac = function DoctorInterfaceComponent_Factory(t) {\n  return new (t || DoctorInterfaceComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n};\nDoctorInterfaceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DoctorInterfaceComponent,\n  selectors: [[\"app-doctor-interface\"]],\n  decls: 31,\n  vars: 12,\n  consts: [[\"for\", \"patientSelect\"], [\"id\", \"patientSelect\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"medication\"], [\"type\", \"text\", \"id\", \"medication\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dosage\"], [\"type\", \"text\", \"id\", \"dosage\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"time\"], [\"type\", \"time\", \"id\", \"time\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"days\"], [\"id\", \"days\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [3, \"click\"]],\n  template: function DoctorInterfaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Doctor Interface\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"label\", 0);\n      i0.ɵɵtext(4, \"Select Patient:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"select\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_select_ngModelChange_5_listener($event) {\n        return ctx.selectedPatient = $event;\n      });\n      i0.ɵɵtemplate(6, DoctorInterfaceComponent_option_6_Template, 2, 2, \"option\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Medication:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.medication = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Dosage:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.dosage = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 7);\n      i0.ɵɵtext(17, \"Time to take medication:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.time = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\", 9);\n      i0.ɵɵtext(21, \"Take every:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"select\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorInterfaceComponent_Template_select_ngModelChange_22_listener($event) {\n        return ctx.days = $event;\n      });\n      i0.ɵɵelementStart(23, \"option\", 11);\n      i0.ɵɵtext(24, \"day\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 11);\n      i0.ɵɵtext(26, \"other day\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 11);\n      i0.ɵɵtext(28, \"3 days\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function DoctorInterfaceComponent_Template_button_click_29_listener() {\n        return ctx.setPrescription();\n      });\n      i0.ɵɵtext(30, \"Set Prescription\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.medication);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.dosage);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.time);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.days);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(9, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(10, _c1));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(11, _c2));\n    }\n  },\n  dependencies: [i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf],\n  styles: [\".customCalendar[_ngcontent-%COMP%] {\\n    width: 300px;\\n    height: 300px\\n}\\n\\n.selected-date[_ngcontent-%COMP%] {\\n    background-color: #66BB6A;\\n    \\n    color: #FFFFFF;\\n    \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZG9jdG9yLWludGVyZmFjZS9kb2N0b3ItaW50ZXJmYWNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1o7QUFDSjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QiwyQ0FBMkM7SUFDM0MsY0FBYztJQUNkLHFDQUFxQztBQUN6QyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b21DYWxlbmRhciB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogMzAwcHhcbn1cblxuLnNlbGVjdGVkLWRhdGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM2NkJCNkE7XG4gICAgLyogWW91IGNhbiBjdXN0b21pemUgdGhlIGJhY2tncm91bmQgY29sb3IgKi9cbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAvKiBZb3UgY2FuIGN1c3RvbWl6ZSB0aGUgdGV4dCBjb2xvciAqL1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,kCAA2D;IACzDA,YACF;IAAAA,iBAAS;;;;IAFgCA,kCAAiB;IACxDA,eACF;IADEA,2CACF;;;;;;;;;;;;ACGN,OAAM,MAAOC,wBAAwB;EAanCC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAXjC,oBAAe,GAAW,EAAE,CAAC,CAAC;IAC9B,eAAU,GAAW,EAAE,CAAC,CAAC;IACzB,WAAM,GAAW,EAAE,CAAC,CAAC;IACrB,SAAI,GAAQ,EAAE;IAEd,aAAQ,GAAS,IAAIC,IAAI,EAAE;IAC3B,WAAM,GAAoB,EAAE;IAC5B,kBAAa,GAAW,EAAE;IAC1B,aAAQ,GAAU,EAAE;IACpB,iBAAY,GAAU,EAAE;EAE4B;EAEpDC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACH,aAAa,CAACG,WAAW,EAAE,CAACC,SAAS,CACvCC,IAAS,IAAI;MACZ,IAAI,CAACC,QAAQ,GAAGD,IAAI;MACpBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC5B,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CACF;EACH;EAIAC,eAAe;IACb,IAAIC,GAAG,GAAC,CAAC;IACT,IAAIC,MAAM,GAAE,EAAE;IACd,OAAOD,GAAG,IAAI,EAAE,EAAC;MACfC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC;MAChBJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;MAChBA,GAAG,GAACA,GAAG,GAAC,IAAI,CAACG,IAAI;;IAEnBH,GAAG,GAAC,CAAC;IACL,IAAII,IAAI,GAAG;MACTC,QAAQ,EAAG,IAAI,CAACC,eAAe;MAC/BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfN,IAAI,EAAEF;KACP;IACD,IAAI,CAACZ,aAAa,CAACU,eAAe,CAACK,IAAI,CAAC,CAACX,SAAS,CAC/CC,IAAQ,IAAI;MACXE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CACF;EACH;EACAgB,YAAY,CAACC,GAAwE;IACnF,MAAMC,WAAW,GAAGD,GAAG,CAACA,GAAG,CAACE,IAAI;IAEhC;IACA,IAAI,IAAI,CAACC,cAAc,CAACF,WAAW,CAAC,EAAE;MACpC,IAAI,CAACG,aAAa,GAAG,IAAI,CAACA,aAAa,CAACC,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACI,YAAY,EAAE,KAAKL,WAAW,CAACK,YAAY,EAAE,CAAC;KAC3G,MAAM;MACL,IAAI,CAACF,aAAa,CAACb,IAAI,CAACU,WAAW,CAAC;;EAExC;EAEAE,cAAc,CAACD,IAAU;IACvB,OAAO,IAAI,CAACE,aAAa,CAACG,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACF,YAAY,EAAE,KAAKJ,IAAI,CAACI,YAAY,EAAE,CAAC;EACrG;;AApEW9B,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTrCtC,2BAAK;MACGA,gCAAgB;MAAAA,iBAAK;MACzBA,gCAA2B;MAAAA,+BAAe;MAAAA,iBAAQ;MAClDA,iCAAyD;MAA9BA;QAAA;MAAA,EAA6B;MACtDA,+EAES;MACXA,iBAAS;MAETA,2BAAK;MACuBA,2BAAW;MAAAA,iBAAQ;MAC3CA,iCAA8D;MAA3BA;QAAA;MAAA,EAAwB;MAA3DA,iBAA8D;MAGlEA,4BAAK;MACmBA,wBAAO;MAAAA,iBAAQ;MACnCA,iCAAsD;MAAvBA;QAAA;MAAA,EAAoB;MAAnDA,iBAAsD;MAG1DA,4BAAK;MACiBA,yCAAwB;MAAAA,iBAAQ;MAClDA,iCAAkD;MAArBA;QAAA;MAAA,EAAkB;MAA/CA,iBAAkD;MAGtDA,4BAAK;MACiBA,4BAAW;MAAAA,iBAAQ;MACrCA,mCAAqC;MAAnBA;QAAA;MAAA,EAAkB;MAChCA,mCAAkC;MAAAA,oBAAG;MAAAA,iBAAS;MAC9CA,mCAA0B;MAAAA,0BAAS;MAAAA,iBAAS;MAC5CA,mCAAwB;MAAAA,uBAAM;MAAAA,iBAAS;MAG/CA,mCAAoC;MAA5BA;QAAA,OAASuC,qBAAiB;MAAA,EAAC;MAACvC,iCAAgB;MAAAA,iBAAS;;;MA7BlCA,eAA6B;MAA7BA,6CAA6B;MAC1BA,eAAW;MAAXA,sCAAW;MAOFA,eAAwB;MAAxBA,wCAAwB;MAK5BA,eAAoB;MAApBA,oCAAoB;MAKtBA,eAAkB;MAAlBA,kCAAkB;MAK7BA,eAAkB;MAAlBA,kCAAkB;MACxBA,eAAwB;MAAxBA,kDAAwB;MACxBA,eAAgB;MAAhBA,mDAAgB;MAChBA,eAAc;MAAdA,mDAAc","names":["i0","DoctorInterfaceComponent","constructor","doctorService","Date","ngOnInit","getPatients","subscribe","data","patients","console","log","error","setPrescription","sum","toTake","push","days","form","username","selectedPatient","medication","dosage","time","onDayClicked","day","clickedDate","date","isSelectedDate","selectedDates","filter","toDateString","some","selectedDate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-interface/doctor-interface.component.html","/Users/lauraghimici/Documents/Automatica si Informatica Aplicata /MASTER/Anul 1/Sem 1/Proiect-semestru/frontend/src/app/doctor-interface/doctor-interface.component.ts"],"sourcesContent":["<div>\n    <h2>Doctor Interface</h2>\n    <label for=\"patientSelect\">Select Patient:</label>\n    <select id=\"patientSelect\" [(ngModel)]=\"selectedPatient\">\n      <option *ngFor=\"let patient of patients\" [value]=\"patient\">\n        {{ patient }}\n      </option>\n    </select>\n\n    <div>\n        <label for=\"medication\">Medication:</label>\n        <input type=\"text\" id=\"medication\" [(ngModel)]=\"medication\" />\n    </div>\n\n    <div>\n        <label for=\"dosage\">Dosage:</label>\n        <input type=\"text\" id=\"dosage\" [(ngModel)]=\"dosage\" />\n    </div>\n\n    <div>\n        <label for=\"time\">Time to take medication:</label>\n        <input type=\"time\" id=\"time\" [(ngModel)]=\"time\" />\n    </div>\n\n    <div>\n        <label for=\"days\">Take every:</label>\n        <select id=\"days\" [(ngModel)]=\"days\">\n            <option [value] =[1,2,3,4,5,6,7] >day</option>\n            <option [value] =[2,4,6] >other day</option>\n            <option [value] =[3,6] >3 days</option>\n        </select>\n    </div>\n    <button (click)=\"setPrescription()\">Set Prescription</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CalendarEvent, MonthViewDay } from 'calendar-utils';\nimport { DoctorService } from '../_services/doctor.service';\n\n@Component({\n  selector: 'app-doctor-interface',\n  templateUrl: './doctor-interface.component.html',\n  styleUrls: ['./doctor-interface.component.css']\n})\nexport class DoctorInterfaceComponent implements OnInit {\n\n  selectedPatient: string = ''; // Define selectedPatient property\n  medication: string = ''; // Define medication property\n  dosage: string = ''; // Define dosage property\n  time:string='';\n  days:number;\n  viewDate: Date = new Date();\n  events: CalendarEvent[] = [];\n  selectedDates: Date[] = [];\n  patients: any[] = [];\n  dayModifiers: any[] = [];\n\n  constructor(private doctorService: DoctorService) { }\n\n  ngOnInit(): void {\n    this.getPatients();\n  }\n\n  getPatients() {\n    this.doctorService.getPatients().subscribe(\n      (data: any) => {\n        this.patients = data;\n        console.log(this.patients);\n      },\n      (error) => {\n        console.error('Error fetching patients:', error);\n      }\n    );\n  }\n  \n  \n\n  setPrescription() {\n    var sum=1;\n    var toTake =[];\n    while( sum <= 12){\n      toTake.push(sum);\n      console.log(sum);\n      sum=sum+this.days;\n    }\n    sum=1;\n    var form = {\n      username : this.selectedPatient,\n      medication: this.medication,\n      dosage: this.dosage,\n      time: this.time,\n      days: toTake\n    }\n    this.doctorService.setPrescription(form).subscribe(\n      (data:any) => {\n        console.log(data);\n      }\n    )\n  }\n  onDayClicked(day: { day: MonthViewDay<any>; sourceEvent: MouseEvent | KeyboardEvent }): void {\n    const clickedDate = day.day.date;\n\n    // Toggle the selection status of the date\n    if (this.isSelectedDate(clickedDate)) {\n      this.selectedDates = this.selectedDates.filter(date => date.toDateString() !== clickedDate.toDateString());\n    } else {\n      this.selectedDates.push(clickedDate);\n    }\n  }\n  \n  isSelectedDate(date: Date): boolean {\n    return this.selectedDates.some(selectedDate => selectedDate.toDateString() === date.toDateString());\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}